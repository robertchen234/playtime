{"ast":null,"code":"import _defineProperty from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/flatironschool/flatiron/mod5/week2/playtime/src/components/EditProfileForm.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nvar EditProfileForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditProfileForm, _Component);\n\n  function EditProfileForm(props) {\n    var _this;\n\n    _classCallCheck(this, EditProfileForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditProfileForm).call(this, props));\n    _this.state = {\n      id: _this.props.currentUser.id,\n      full_name: _this.props.currentUser.full_name,\n      password: \"\",\n      mod_id: _this.props.currentUser.mod_id,\n      alert_error: false\n    };\n    _this.submitHandler = _this.submitHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeHandler = _this.changeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditProfileForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"edit-profile-form\",\n        className: \"ui card form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, this.props.isUserLoggedIn ? React.createElement(\"form\", {\n        onSubmit: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"full_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Full Name: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"full_name\",\n        onChange: this.changeHandler,\n        value: this.state.full_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Password: \"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"type new password\",\n        id: \"password\",\n        value: this.state.password,\n        onChange: this.changeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"mod\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Mod #: \"), React.createElement(\"select\", {\n        name: \"mod_id\",\n        id: \"mod_id\",\n        onChange: this.changeHandler,\n        value: this.state.mod_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.getMods()), this.state.alert_error ? React.createElement(\"span\", {\n        className: \"alert-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Full name and password field cannot be empty. Mod ID should not be lower than your current mod.\") : null, React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"submit button pointer\",\n        value: \"Update\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"getMods\",\n    value: function getMods() {\n      return this.props.mods.map(function (mod) {\n        return React.createElement(\"option\", {\n          key: mod.id,\n          value: mod.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, mod.rank);\n      });\n    }\n  }, {\n    key: \"submitHandler\",\n    value: function submitHandler(e) {\n      e.preventDefault();\n\n      if (this.state.full_name !== \"\" && this.state.password !== \"\" && this.state.mod_id >= this.props.currentUser.mod_id) {\n        this.props.updateHandler(this.state);\n        e.target.reset();\n      } else {\n        this.setState({\n          alert_error: true\n        });\n      }\n    }\n  }, {\n    key: \"changeHandler\",\n    value: function changeHandler(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }]);\n\n  return EditProfileForm;\n}(Component);\n\nexport default EditProfileForm;","map":{"version":3,"sources":["/Users/flatironschool/flatiron/mod5/week2/playtime/src/components/EditProfileForm.js"],"names":["React","Component","Redirect","EditProfileForm","props","state","id","currentUser","full_name","password","mod_id","alert_error","submitHandler","bind","changeHandler","isUserLoggedIn","getMods","mods","map","mod","rank","e","preventDefault","updateHandler","target","reset","setState","event","name","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nclass EditProfileForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: this.props.currentUser.id,\n      full_name: this.props.currentUser.full_name,\n      password: \"\",\n      mod_id: this.props.currentUser.mod_id,\n      alert_error: false\n    };\n\n    this.submitHandler = this.submitHandler.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n  }\n\n  render() {\n    return (\n      <div id=\"edit-profile-form\" className=\"ui card form\">\n        {this.props.isUserLoggedIn ? (\n          <form onSubmit={this.submitHandler}>\n            <label htmlFor=\"full_name\">Full Name: </label>\n            <input\n              type=\"text\"\n              name=\"full_name\"\n              onChange={this.changeHandler}\n              value={this.state.full_name}\n            />\n            <label htmlFor=\"password\">Password: </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"type new password\"\n              id=\"password\"\n              value={this.state.password}\n              onChange={this.changeHandler}\n            />\n            <label htmlFor=\"mod\">Mod #: </label>\n            <select\n              name=\"mod_id\"\n              id=\"mod_id\"\n              onChange={this.changeHandler}\n              value={this.state.mod_id}\n            >\n              {this.getMods()}\n            </select>\n\n            {this.state.alert_error ? <span className=\"alert-error\">Full name and password field cannot be empty. Mod ID should not be lower than your current mod.</span> : null}\n\n            <input\n              type=\"submit\"\n              className=\"submit button pointer\"\n              value=\"Update\"\n            />\n          </form>\n        ) : (\n          <Redirect to=\"/login\" />\n        )}\n      </div>\n    );\n  }\n\n  getMods() {\n    return this.props.mods.map(mod => (\n      <option key={mod.id} value={mod.id}>\n        {mod.rank}\n      </option>\n    ));\n  }\n\n  submitHandler(e) {\n    e.preventDefault();\n    if (\n      this.state.full_name !== \"\" &&\n      this.state.password !== \"\" &&\n      this.state.mod_id >= this.props.currentUser.mod_id\n    ) {\n      this.props.updateHandler(this.state);\n      e.target.reset();\n    } else {\n      this.setState({ alert_error: true });\n    }\n  }\n\n  changeHandler(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n}\n\nexport default EditProfileForm;\n"]},"metadata":{},"sourceType":"module"}