{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/flatiron/mod5/week2/playtime/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport HomePage from \"./components/HomePage\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { getUsers } from \"./actions/userActions\";\nimport { connect } from \"react-redux\";\nimport UserShowPage from \"./containers/PostsContainer\";\nimport EditProfileForm from \"./components/EditProfileForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport SignUpForm from \"./components/SignUpForm\";\nimport SearchPage from \"./components/SearchPage\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isUserLoggedIn: false,\n      currentUser: {\n        id: 0,\n        first_name: \"\",\n        last_name: \"\",\n        username: \"\",\n        // password: \"\",\n        email: \"\",\n        city: \"\",\n        school: \"\",\n        work: \"\",\n        lvl: 1,\n        exp: 0,\n        exp_limit: 200,\n        energy: 5,\n        max_energy: 5,\n        speed: 1,\n        profile_img: \"https://c1.staticflickr.com/6/5643/23778807571_e9649ee35e_b.jpg\",\n        cover_img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Friends_logo.svg/2000px-Friends_logo.svg.png\"\n      },\n      users: [],\n      posts: [],\n      comments: [],\n      token: \"\",\n      search: \"\"\n    };\n\n    _this.addExp = function (activity) {\n      fetch(\"http://localhost:3000/api/v1/users/\".concat(_this.state.currentUser.id), {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          exp: _this.state.currentUser.exp += activity === \"post\" ? 60 : activity === \"comment\" ? 40 : activity === \"tag\" ? 40 : activity === \"emoji\" ? 20 : 0,\n          energy: _this.state.currentUser.energy -= activity === \"post\" ? 20 : activity === \"comment\" ? 5 : activity === \"tag\" ? 5 : activity === \"emoji\" ? 1 : 0\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var newArr = _toConsumableArray(_this.state.users);\n\n        newArr = newArr.map(function (user) {\n          if (user.id === _this.state.currentUser.id) {\n            return data;\n          } else {\n            return user;\n          }\n        });\n\n        _this.setState({\n          users: newArr\n        });\n      }).then(_this.statsHandler());\n    };\n\n    _this.statsHandler = function () {\n      var currentUser = _this.state.currentUser;\n\n      if (currentUser.exp >= currentUser.exp_limit) {\n        _this.levelUp();\n      }\n    };\n\n    _this.levelUp = function () {\n      fetch(\"http://localhost:3000/api/v1/users/\".concat(_this.state.currentUser.id), {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          lvl: _this.state.currentUser.lvl += 1,\n          exp: _this.state.currentUser.exp -= _this.state.currentUser.exp_limit,\n          exp_limit: _this.state.currentUser.exp_limit *= 1.05,\n          max_energy: _this.state.currentUser.max_energy *= 1.05,\n          energy: _this.state.currentUser.max_energy *= 1.05\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var newArr = _toConsumableArray(_this.state.users);\n\n        newArr = newArr.map(function (user) {\n          if (user.id === _this.state.currentUser.id) {\n            return data;\n          } else {\n            return user;\n          }\n        });\n\n        _this.setState({\n          users: newArr\n        });\n      });\n    };\n\n    _this.changeHandler = function (e) {\n      _this.setState({\n        search: e.target.value\n      });\n    };\n\n    _this.clearSearch = function () {\n      _this.setState({\n        search: \"\"\n      });\n    };\n\n    _this.addPost = function (input, playerId, friendId) {\n      if (_this.state.currentUser.energy >= 20) {\n        fetch(\"http://localhost:3000/api/v1/posts\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: localStorage.getItem(\"token\")\n          },\n          body: JSON.stringify({\n            content: input,\n            player_id: playerId,\n            friend_id: friendId\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          var newArr = _toConsumableArray(_this.state.posts);\n\n          newArr.push(data);\n\n          _this.setState({\n            posts: newArr\n          });\n        }).then(_this.addExp(\"post\"));\n      }\n    };\n\n    _this.addComment = function (input, playerId, postId) {\n      if (_this.state.currentUser.energy >= 5) {\n        fetch(\"http://localhost:3000/api/v1/comments\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: localStorage.getItem(\"token\")\n          },\n          body: JSON.stringify({\n            comment: input,\n            user_id: playerId,\n            post_id: postId\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          var newArr = [].concat(_toConsumableArray(_this.state.comments), [data]);\n\n          _this.setState({\n            comments: newArr\n          });\n        }).then(_this.addExp(\"comment\"));\n      }\n    };\n\n    _this.editCover = function (input) {\n      fetch(\"http://localhost:3000/api/v1/users/\".concat(_this.state.currentUser.id), {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          cover_img: input\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var newArr = _toConsumableArray(_this.state.users);\n\n        newArr = newArr.map(function (user) {\n          if (user.id === _this.state.currentUser.id) {\n            return data;\n          } else {\n            return user;\n          }\n        });\n\n        _this.setState({\n          users: newArr\n        });\n      });\n    };\n\n    _this.editProfilePic = function (input) {\n      fetch(\"http://localhost:3000/api/v1/users/\".concat(_this.state.currentUser.id), {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          profile_img: input\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var newArr = _toConsumableArray(_this.state.users);\n\n        newArr = newArr.map(function (user) {\n          if (user.id === _this.state.currentUser.id) {\n            return data;\n          } else {\n            return user;\n          }\n        });\n\n        _this.setState({\n          users: newArr\n        });\n      });\n    };\n\n    _this.updateHandler = function (currentUser) {\n      _this.setState({\n        currentUser: currentUser\n      });\n\n      fetch(\"http://localhost:3000/api/v1/users/\".concat(currentUser.id), {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: _this.state.token\n        },\n        body: JSON.stringify({\n          username: currentUser.username,\n          password: currentUser.password\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (user) {\n        _this.setState({\n          currentUser: {\n            id: user.id,\n            username: user.username\n          }\n        });\n\n        _this.props.history.push(\"/home\");\n      });\n    };\n\n    _this.submitSignUpHandler = function (userInfo, event) {\n      event.preventDefault();\n\n      _this.createUser(userInfo);\n\n      _this.props.history.push(\"/home\");\n    };\n\n    _this.createUser = function (userInfo) {\n      fetch(\"http://localhost:3000/api/v1/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          username: userInfo.username,\n          password: userInfo.password,\n          first_name: userInfo.first_name,\n          last_name: userInfo.last_name,\n          lvl: 1,\n          exp: 0,\n          exp_limit: 200,\n          energy: 50,\n          max_energy: 50,\n          speed: 1\n        })\n      }).then(function (res) {\n        if (res.status === 406) throw new Error(res.status);else return res.json();\n      }).then(function (res) {\n        localStorage.setItem(\"token\", res.jwt);\n        localStorage.setItem(\"id\", res.user.id);\n        localStorage.setItem(\"username\", res.user.username); //come back\n\n        _this.setState({\n          isUserLoggedIn: true,\n          token: localStorage.getItem(\"token\"),\n          currentUser: {\n            id: res.user.id,\n            username: res.user.username,\n            first_name: res.user.first_name,\n            last_name: res.user.last_name,\n            lvl: 1,\n            exp: 0,\n            exp_limit: 200,\n            energy: 50,\n            max_energy: 50,\n            speed: 1,\n            password: \"\"\n          }\n        });\n      }).catch(function (error) {\n        localStorage.setItem(\"signupError\", \"Duplicate account\");\n\n        _this.props.history.push(\"/signup\");\n      });\n    };\n\n    _this.submitLoginHandler = function (userInfo, event) {\n      event.preventDefault();\n\n      _this.getUser(userInfo);\n\n      _this.props.history.push(\"/home\");\n    };\n\n    _this.getUser = function (userInfo) {\n      fetch(\"http://localhost:3000/api/v1/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          username: userInfo.loginUsername,\n          password: userInfo.loginPassword\n        })\n      }).then(function (res) {\n        if (res.status === 401) throw new Error(res.status);else return res.json();\n      }) // .then(res => res.json())\n      .then(function (res) {\n        localStorage.setItem(\"token\", res.jwt);\n        localStorage.setItem(\"id\", res.user.id);\n        localStorage.setItem(\"username\", res.user.username);\n        localStorage.setItem(\"first_name\", res.user.first_name);\n        localStorage.setItem(\"last_name\", res.user.last_name);\n        localStorage.setItem(\"email\", res.user.email);\n        localStorage.setItem(\"city\", res.user.city);\n        localStorage.setItem(\"school\", res.user.school);\n        localStorage.setItem(\"work\", res.user.work);\n        localStorage.setItem(\"lvl\", res.user.lvl);\n        localStorage.setItem(\"exp\", res.user.exp);\n        localStorage.setItem(\"exp_limit\", res.user.exp_limit);\n        localStorage.setItem(\"energy\", res.user.energy);\n        localStorage.setItem(\"max_energy\", res.user.max_energy);\n        localStorage.setItem(\"speed\", res.user.speed);\n        localStorage.setItem(\"profile_img\", res.user.profile_img);\n        localStorage.setItem(\"cover_img\", res.user.cover_img);\n\n        _this.setState({\n          isUserLoggedIn: true,\n          token: localStorage.getItem(\"token\"),\n          currentUser: {\n            id: res.user.id,\n            username: res.user.username,\n            first_name: res.user.first_name,\n            last_name: res.user.last_name,\n            email: res.user.email,\n            password: \"\",\n            city: res.user.city,\n            school: res.user.school,\n            work: res.user.work,\n            lvl: res.user.lvl,\n            exp: res.user.exp,\n            exp_limit: res.user.exp_limit,\n            energy: res.user.energy,\n            max_energy: res.user.max_energy,\n            speed: res.user.speed,\n            profile_img: res.user.profile_img,\n            cover_img: res.user.cover_img\n          }\n        });\n      }).catch(function (error) {\n        localStorage.setItem(\"loginError\", \"Invalid account/password\");\n\n        _this.props.history.push(\"/login\"); // this.setState({ alert_error: true });\n        // alert(`HTTP ERROR: ${error}, Unknown account or password!`);\n\n      });\n    };\n\n    _this.logout = function () {\n      //need to remove local storage token\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"id\");\n      localStorage.removeItem(\"username\");\n\n      _this.setState({\n        currentUser: {\n          id: 0,\n          username: \"\"\n        },\n        isUserLoggedIn: false,\n        token: \"\"\n      });\n\n      _this.props.history.push(\"/home\");\n    };\n\n    _this.deleteHandler = function (id) {\n      var posts = _toConsumableArray(_this.state.posts).filter(function (post) {\n        return post.id !== id;\n      });\n\n      _this.setState({\n        posts: posts\n      });\n    };\n\n    _this.editPostHandler = function (id, content) {\n      fetch(\"http://localhost:3000/api/v1/posts/\".concat(id), {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: _this.state.token\n        },\n        body: JSON.stringify({\n          content: content\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var newArr = _toConsumableArray(_this.state.posts);\n\n        newArr = newArr.map(function (post) {\n          if (post.id === id) {\n            return data;\n          } else {\n            return post;\n          }\n        });\n\n        _this.setState({\n          posts: newArr\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.getUsers();\n      fetch(\"http://localhost:3000/api/v1/posts\").then(function (resp) {\n        return resp.json();\n      }).then(function (posts) {\n        _this2.setState({\n          posts: posts\n        });\n      });\n      fetch(\"http://localhost:3000/api/v1/comments\").then(function (resp) {\n        return resp.json();\n      }).then(function (comments) {\n        _this2.setState({\n          comments: comments\n        });\n      });\n\n      if (localStorage.getItem(\"token\") !== null) {\n        this.setState({\n          currentUser: {\n            id: parseInt(localStorage.getItem(\"id\")),\n            username: localStorage.getItem(\"username\"),\n            first_name: localStorage.getItem(\"first_name\"),\n            last_name: localStorage.getItem(\"last_name\"),\n            email: localStorage.getItem(\"email\"),\n            city: localStorage.getItem(\"city\"),\n            school: localStorage.getItem(\"school\"),\n            work: localStorage.getItem(\"work\"),\n            lvl: localStorage.getItem(\"lvl\"),\n            exp: localStorage.getItem(\"exp\"),\n            exp_limit: localStorage.getItem(\"exp_limit\"),\n            energy: localStorage.getItem(\"energy\"),\n            max_energy: localStorage.getItem(\"max_energy\"),\n            speed: localStorage.getItem(\"speed\"),\n            profile_img: localStorage.getItem(\"profile_img\"),\n            cover_img: localStorage.getItem(\"cover_img\")\n          },\n          token: localStorage.getItem(\"token\"),\n          isUserLoggedIn: true\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      fetch(\"http://localhost:3000/api/v1/users\").then(function (resp) {\n        return resp.json();\n      }).then(function (users) {\n        localStorage.setItem(\"users\", JSON.stringify(users));\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      localStorage.clear();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        isUserLoggedIn: this.state.isUserLoggedIn,\n        logout: this.logout,\n        currentPath: this.props.location.pathname,\n        search: this.state.search,\n        changeHandler: this.changeHandler,\n        currentUser: this.state.currentUser,\n        clearSearch: this.clearSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), this.state.search === \"\" ? React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/home\",\n        render: function render(RouterProps) {\n          return _this3.state.isUserLoggedIn ? React.createElement(UserShowPage, {\n            user_id: _this3.state.currentUser.id,\n            posts: _this3.state.posts,\n            addPost: _this3.addPost,\n            addComment: _this3.addComment,\n            isUserLoggedIn: _this3.state.isUserLoggedIn,\n            currentUser: _this3.state.currentUser,\n            deleteHandler: _this3.deleteHandler,\n            editPostHandler: _this3.editPostHandler,\n            comments: _this3.state.comments,\n            users: JSON.parse(localStorage.getItem(\"users\")),\n            editCover: _this3.editCover,\n            editProfilePic: _this3.editProfilePic,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }) : React.createElement(HomePage, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/user/:id\",\n        render: function render(RouterProps) {\n          return React.createElement(UserShowPage, {\n            user_id: parseInt(RouterProps.match.params.id),\n            posts: _this3.state.posts,\n            addPost: _this3.addPost,\n            addComment: _this3.addComment,\n            isUserLoggedIn: _this3.state.isUserLoggedIn,\n            currentUser: _this3.state.currentUser,\n            deleteHandler: _this3.deleteHandler,\n            editPostHandler: _this3.editPostHandler,\n            comments: _this3.state.comments,\n            users: JSON.parse(localStorage.getItem(\"users\")),\n            editCover: _this3.editCover,\n            editProfilePic: _this3.editProfilePic,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/search\",\n        render: function render() {\n          return React.createElement(SearchPage, {\n            clearSearch: _this3.clearSearch,\n            isUserLoggedIn: _this3.state.isUserLoggedIn,\n            search: _this3.state.search,\n            users: _this3.props.users,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/editProfile\",\n        render: function render() {\n          return React.createElement(EditProfileForm, {\n            isUserLoggedIn: _this3.state.isUserLoggedIn,\n            currentUser: _this3.state.currentUser,\n            updateHandler: _this3.updateHandler,\n            mods: _this3.state.mods,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login\",\n        render: function render() {\n          return React.createElement(LoginForm, {\n            submitLoginHandler: _this3.submitLoginHandler,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 283\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/signUp\",\n        render: function render() {\n          return React.createElement(SignUpForm, {\n            submitSignUpHandler: _this3.submitSignUpHandler,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        component: HomePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      })) : React.createElement(SearchPage, {\n        clearSearch: this.clearSearch,\n        isUserLoggedIn: this.state.isUserLoggedIn,\n        search: this.state.search,\n        users: this.props.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getUsers: bindActionCreators(getUsers, dispatch)\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/flatironschool/flatiron/mod5/week2/playtime/src/App.js"],"names":["React","Component","NavBar","HomePage","Route","Switch","withRouter","bindActionCreators","getUsers","connect","UserShowPage","EditProfileForm","LoginForm","SignUpForm","SearchPage","App","state","isUserLoggedIn","currentUser","id","first_name","last_name","username","email","city","school","work","lvl","exp","exp_limit","energy","max_energy","speed","profile_img","cover_img","users","posts","comments","token","search","addExp","activity","fetch","method","headers","Accept","Authorization","localStorage","getItem","body","JSON","stringify","then","res","json","data","newArr","map","user","setState","statsHandler","levelUp","changeHandler","e","target","value","clearSearch","addPost","input","playerId","friendId","content","player_id","friend_id","push","addComment","postId","comment","user_id","post_id","editCover","editProfilePic","updateHandler","password","resp","props","history","submitSignUpHandler","userInfo","event","preventDefault","createUser","status","Error","setItem","jwt","catch","error","submitLoginHandler","getUser","loginUsername","loginPassword","logout","removeItem","deleteHandler","filter","post","editPostHandler","parseInt","prevProps","prevState","clear","location","pathname","RouterProps","parse","match","params","mods","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport HomePage from \"./components/HomePage\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { getUsers } from \"./actions/userActions\";\nimport { connect } from \"react-redux\";\nimport UserShowPage from \"./containers/PostsContainer\";\nimport EditProfileForm from \"./components/EditProfileForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport SignUpForm from \"./components/SignUpForm\";\nimport SearchPage from \"./components/SearchPage\";\n\nclass App extends Component {\n  state = {\n    isUserLoggedIn: false,\n    currentUser: {\n      id: 0,\n      first_name: \"\",\n      last_name: \"\",\n      username: \"\",\n      // password: \"\",\n      email: \"\",\n      city: \"\",\n      school: \"\",\n      work: \"\",\n      lvl: 1,\n      exp: 0,\n      exp_limit: 200,\n      energy: 5,\n      max_energy: 5,\n      speed: 1,\n      profile_img:\n        \"https://c1.staticflickr.com/6/5643/23778807571_e9649ee35e_b.jpg\",\n      cover_img:\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Friends_logo.svg/2000px-Friends_logo.svg.png\"\n    },\n    users: [],\n    posts: [],\n    comments: [],\n    token: \"\",\n    search: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getUsers();\n\n    fetch(\"http://localhost:3000/api/v1/posts\")\n      .then(resp => resp.json())\n      .then(posts => {\n        this.setState({ posts });\n      });\n\n    fetch(\"http://localhost:3000/api/v1/comments\")\n      .then(resp => resp.json())\n      .then(comments => {\n        this.setState({ comments });\n      });\n\n    if (localStorage.getItem(\"token\") !== null) {\n      this.setState({\n        currentUser: {\n          id: parseInt(localStorage.getItem(\"id\")),\n          username: localStorage.getItem(\"username\"),\n          first_name: localStorage.getItem(\"first_name\"),\n          last_name: localStorage.getItem(\"last_name\"),\n          email: localStorage.getItem(\"email\"),\n          city: localStorage.getItem(\"city\"),\n          school: localStorage.getItem(\"school\"),\n          work: localStorage.getItem(\"work\"),\n          lvl: localStorage.getItem(\"lvl\"),\n          exp: localStorage.getItem(\"exp\"),\n          exp_limit: localStorage.getItem(\"exp_limit\"),\n          energy: localStorage.getItem(\"energy\"),\n          max_energy: localStorage.getItem(\"max_energy\"),\n          speed: localStorage.getItem(\"speed\"),\n          profile_img: localStorage.getItem(\"profile_img\"),\n          cover_img: localStorage.getItem(\"cover_img\")\n        },\n        token: localStorage.getItem(\"token\"),\n        isUserLoggedIn: true\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    fetch(\"http://localhost:3000/api/v1/users\")\n      .then(resp => resp.json())\n      .then(users => {\n        localStorage.setItem(\"users\", JSON.stringify(users));\n      });\n  }\n\n  componentWillUnmount() {\n    localStorage.clear();\n  }\n\n  addExp = activity => {\n    fetch(`http://localhost:3000/api/v1/users/${this.state.currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        exp: (this.state.currentUser.exp +=\n          activity === \"post\"\n            ? 60\n            : activity === \"comment\"\n            ? 40\n            : activity === \"tag\"\n            ? 40\n            : activity === \"emoji\"\n            ? 20\n            : 0),\n        energy: (this.state.currentUser.energy -=\n          activity === \"post\"\n            ? 20\n            : activity === \"comment\"\n            ? 5\n            : activity === \"tag\"\n            ? 5\n            : activity === \"emoji\"\n            ? 1\n            : 0)\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        let newArr = [...this.state.users];\n        newArr = newArr.map(user => {\n          if (user.id === this.state.currentUser.id) {\n            return data;\n          } else {\n            return user;\n          }\n        });\n        this.setState({ users: newArr });\n      })\n      .then(this.statsHandler());\n  };\n\n  statsHandler = () => {\n    let currentUser = this.state.currentUser;\n    if (currentUser.exp >= currentUser.exp_limit) {\n      this.levelUp();\n    }\n  };\n\n  levelUp = () => {\n    fetch(`http://localhost:3000/api/v1/users/${this.state.currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        lvl: (this.state.currentUser.lvl += 1),\n        exp: (this.state.currentUser.exp -= this.state.currentUser.exp_limit),\n        exp_limit: (this.state.currentUser.exp_limit *= 1.05),\n        max_energy: (this.state.currentUser.max_energy *= 1.05),\n        energy: (this.state.currentUser.max_energy *= 1.05)\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        let newArr = [...this.state.users];\n        newArr = newArr.map(user => {\n          if (user.id === this.state.currentUser.id) {\n            return data;\n          } else {\n            return user;\n          }\n        });\n        this.setState({ users: newArr });\n      });\n  };\n\n  changeHandler = e => {\n    this.setState({\n      search: e.target.value\n    });\n  };\n\n  clearSearch = () => {\n    this.setState({\n      search: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <NavBar\n          isUserLoggedIn={this.state.isUserLoggedIn}\n          logout={this.logout}\n          currentPath={this.props.location.pathname}\n          search={this.state.search}\n          changeHandler={this.changeHandler}\n          currentUser={this.state.currentUser}\n          clearSearch={this.clearSearch}\n        />\n\n        {this.state.search === \"\" ? (\n          <Switch>\n            <Route\n              path=\"/home\"\n              render={RouterProps => {\n                return this.state.isUserLoggedIn ? (\n                  <UserShowPage\n                    user_id={this.state.currentUser.id}\n                    posts={this.state.posts}\n                    addPost={this.addPost}\n                    addComment={this.addComment}\n                    isUserLoggedIn={this.state.isUserLoggedIn}\n                    currentUser={this.state.currentUser}\n                    deleteHandler={this.deleteHandler}\n                    editPostHandler={this.editPostHandler}\n                    comments={this.state.comments}\n                    users={JSON.parse(localStorage.getItem(\"users\"))}\n                    editCover={this.editCover}\n                    editProfilePic={this.editProfilePic}\n                  />\n                ) : (\n                  <HomePage />\n                );\n              }}\n            />\n            <Route\n              path=\"/user/:id\"\n              render={RouterProps => {\n                return (\n                  <UserShowPage\n                    user_id={parseInt(RouterProps.match.params.id)}\n                    posts={this.state.posts}\n                    addPost={this.addPost}\n                    addComment={this.addComment}\n                    isUserLoggedIn={this.state.isUserLoggedIn}\n                    currentUser={this.state.currentUser}\n                    deleteHandler={this.deleteHandler}\n                    editPostHandler={this.editPostHandler}\n                    comments={this.state.comments}\n                    users={JSON.parse(localStorage.getItem(\"users\"))}\n                    editCover={this.editCover}\n                    editProfilePic={this.editProfilePic}\n                  />\n                );\n              }}\n            />\n            <Route\n              path=\"/search\"\n              render={() => {\n                return (\n                  <SearchPage\n                    clearSearch={this.clearSearch}\n                    isUserLoggedIn={this.state.isUserLoggedIn}\n                    search={this.state.search}\n                    users={this.props.users}\n                  />\n                );\n              }}\n            />\n            <Route\n              path=\"/editProfile\"\n              render={() => {\n                return (\n                  <EditProfileForm\n                    isUserLoggedIn={this.state.isUserLoggedIn}\n                    currentUser={this.state.currentUser}\n                    updateHandler={this.updateHandler}\n                    mods={this.state.mods}\n                  />\n                );\n              }}\n            />\n            <Route\n              path=\"/login\"\n              render={() => {\n                return (\n                  <LoginForm submitLoginHandler={this.submitLoginHandler} />\n                );\n              }}\n            />\n            <Route\n              path=\"/signUp\"\n              render={() => {\n                return (\n                  <SignUpForm submitSignUpHandler={this.submitSignUpHandler} />\n                );\n              }}\n            />\n            <Route path=\"/\" component={HomePage} />\n          </Switch>\n        ) : (\n          <SearchPage\n            clearSearch={this.clearSearch}\n            isUserLoggedIn={this.state.isUserLoggedIn}\n            search={this.state.search}\n            users={this.props.users}\n          />\n        )}\n      </div>\n    );\n  }\n\n  addPost = (input, playerId, friendId) => {\n    if (this.state.currentUser.energy >= 20) {\n      fetch(\"http://localhost:3000/api/v1/posts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          content: input,\n          player_id: playerId,\n          friend_id: friendId\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          let newArr = [...this.state.posts];\n          newArr.push(data);\n          this.setState({ posts: newArr });\n        })\n        .then(this.addExp(\"post\"));\n    }\n  };\n\n  addComment = (input, playerId, postId) => {\n    if (this.state.currentUser.energy >= 5) {\n      fetch(\"http://localhost:3000/api/v1/comments\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          comment: input,\n          user_id: playerId,\n          post_id: postId\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          let newArr = [...this.state.comments, data];\n          this.setState({ comments: newArr });\n        })\n        .then(this.addExp(\"comment\"));\n    }\n  };\n\n  editCover = input => {\n    fetch(`http://localhost:3000/api/v1/users/${this.state.currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        cover_img: input\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        let newArr = [...this.state.users];\n        newArr = newArr.map(user => {\n          if (user.id === this.state.currentUser.id) {\n            return data;\n          } else {\n            return user;\n          }\n        });\n        this.setState({ users: newArr });\n      });\n  };\n\n  editProfilePic = input => {\n    fetch(`http://localhost:3000/api/v1/users/${this.state.currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        profile_img: input\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        let newArr = [...this.state.users];\n        newArr = newArr.map(user => {\n          if (user.id === this.state.currentUser.id) {\n            return data;\n          } else {\n            return user;\n          }\n        });\n        this.setState({ users: newArr });\n      });\n  };\n\n  updateHandler = currentUser => {\n    this.setState({ currentUser });\n\n    fetch(`http://localhost:3000/api/v1/users/${currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: this.state.token\n      },\n      body: JSON.stringify({\n        username: currentUser.username,\n        password: currentUser.password\n      })\n    })\n      .then(resp => resp.json())\n      .then(user => {\n        this.setState({\n          currentUser: {\n            id: user.id,\n            username: user.username\n          }\n        });\n        this.props.history.push(\"/home\");\n      });\n  };\n\n  submitSignUpHandler = (userInfo, event) => {\n    event.preventDefault();\n    this.createUser(userInfo);\n    this.props.history.push(\"/home\");\n  };\n\n  createUser = userInfo => {\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        username: userInfo.username,\n        password: userInfo.password,\n        first_name: userInfo.first_name,\n        last_name: userInfo.last_name,\n        lvl: 1,\n        exp: 0,\n        exp_limit: 200,\n        energy: 50,\n        max_energy: 50,\n        speed: 1\n      })\n    })\n      .then(res => {\n        if (res.status === 406) throw new Error(res.status);\n        else return res.json();\n      })\n      .then(res => {\n        localStorage.setItem(\"token\", res.jwt);\n        localStorage.setItem(\"id\", res.user.id);\n        localStorage.setItem(\"username\", res.user.username);\n        //come back\n        this.setState({\n          isUserLoggedIn: true,\n          token: localStorage.getItem(\"token\"),\n          currentUser: {\n            id: res.user.id,\n            username: res.user.username,\n            first_name: res.user.first_name,\n            last_name: res.user.last_name,\n            lvl: 1,\n            exp: 0,\n            exp_limit: 200,\n            energy: 50,\n            max_energy: 50,\n            speed: 1,\n            password: \"\"\n          }\n        });\n      })\n      .catch(error => {\n        localStorage.setItem(\"signupError\", \"Duplicate account\");\n        this.props.history.push(\"/signup\");\n      });\n  };\n\n  submitLoginHandler = (userInfo, event) => {\n    event.preventDefault();\n    this.getUser(userInfo);\n    this.props.history.push(\"/home\");\n  };\n\n  getUser = userInfo => {\n    fetch(\"http://localhost:3000/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        username: userInfo.loginUsername,\n        password: userInfo.loginPassword\n      })\n    })\n      .then(res => {\n        if (res.status === 401) throw new Error(res.status);\n        else return res.json();\n      })\n      // .then(res => res.json())\n      .then(res => {\n        localStorage.setItem(\"token\", res.jwt);\n        localStorage.setItem(\"id\", res.user.id);\n        localStorage.setItem(\"username\", res.user.username);\n        localStorage.setItem(\"first_name\", res.user.first_name);\n        localStorage.setItem(\"last_name\", res.user.last_name);\n        localStorage.setItem(\"email\", res.user.email);\n        localStorage.setItem(\"city\", res.user.city);\n        localStorage.setItem(\"school\", res.user.school);\n        localStorage.setItem(\"work\", res.user.work);\n        localStorage.setItem(\"lvl\", res.user.lvl);\n        localStorage.setItem(\"exp\", res.user.exp);\n        localStorage.setItem(\"exp_limit\", res.user.exp_limit);\n        localStorage.setItem(\"energy\", res.user.energy);\n        localStorage.setItem(\"max_energy\", res.user.max_energy);\n        localStorage.setItem(\"speed\", res.user.speed);\n        localStorage.setItem(\"profile_img\", res.user.profile_img);\n        localStorage.setItem(\"cover_img\", res.user.cover_img);\n\n        this.setState({\n          isUserLoggedIn: true,\n          token: localStorage.getItem(\"token\"),\n          currentUser: {\n            id: res.user.id,\n            username: res.user.username,\n            first_name: res.user.first_name,\n            last_name: res.user.last_name,\n            email: res.user.email,\n            password: \"\",\n            city: res.user.city,\n            school: res.user.school,\n            work: res.user.work,\n            lvl: res.user.lvl,\n            exp: res.user.exp,\n            exp_limit: res.user.exp_limit,\n            energy: res.user.energy,\n            max_energy: res.user.max_energy,\n            speed: res.user.speed,\n            profile_img: res.user.profile_img,\n            cover_img: res.user.cover_img\n          }\n        });\n      })\n      .catch(error => {\n        localStorage.setItem(\"loginError\", \"Invalid account/password\");\n        this.props.history.push(\"/login\");\n        // this.setState({ alert_error: true });\n        // alert(`HTTP ERROR: ${error}, Unknown account or password!`);\n      });\n  };\n\n  logout = () => {\n    //need to remove local storage token\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"id\");\n    localStorage.removeItem(\"username\");\n\n    this.setState({\n      currentUser: {\n        id: 0,\n        username: \"\"\n      },\n      isUserLoggedIn: false,\n      token: \"\"\n    });\n\n    this.props.history.push(\"/home\");\n  };\n\n  deleteHandler = id => {\n    const posts = [...this.state.posts].filter(post => post.id !== id);\n    this.setState({ posts });\n  };\n\n  editPostHandler = (id, content) => {\n    fetch(`http://localhost:3000/api/v1/posts/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: this.state.token\n      },\n      body: JSON.stringify({\n        content\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        let newArr = [...this.state.posts];\n        newArr = newArr.map(post => {\n          if (post.id === id) {\n            return data;\n          } else {\n            return post;\n          }\n        });\n        this.setState({ posts: newArr });\n      });\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getUsers: bindActionCreators(getUsers, dispatch)\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n);\n"]},"metadata":{},"sourceType":"module"}