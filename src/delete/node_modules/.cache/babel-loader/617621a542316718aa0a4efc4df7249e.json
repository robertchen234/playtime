{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/flatiron/mod5/week2/playtime/src/containers/PostsContainer.js\";\nimport React, { Component } from \"react\";\nimport Post from \"../components/Post\";\nimport NewPostForm from \"../components/NewPostForm\";\nimport { withRouter } from \"react-router-dom\";\nimport EditCover from \"../components/EditCover\";\n\nvar PostsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostsContainer, _Component);\n\n  function PostsContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostsContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostsContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      user_id: _this.props.user_id,\n      showEditCover: false\n    };\n\n    _this.showPostArray = function () {\n      var posts = _this.props.posts.filter(function (post) {\n        return _this.props.location.pathname === \"/home\" ? post.friend_id === _this.props.currentUser.id : post.friend_id === parseInt(_this.props.user_id);\n      }).reverse();\n\n      return React.createElement(\"div\", {\n        className: \"posts-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, posts.map(function (post) {\n        return React.createElement(\"div\", {\n          key: post.id,\n          className: \"content-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(Post, {\n          post: post,\n          addComment: _this.props.addComment,\n          currentUser: _this.props.currentUser,\n          deleteHandler: _this.props.deleteHandler,\n          editPostHandler: _this.props.editPostHandler // likes={this.props.likes}\n          ,\n          isUserLoggedIn: _this.props.isUserLoggedIn,\n          users: _this.props.users,\n          comments: _this.props.comments,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }));\n      }));\n    };\n\n    _this.toggleEditCover = function () {\n      _this.setState({\n        showEditCover: !_this.state.showEditCover\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PostsContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.showEditCover);\n      var show = {\n        display: this.props.isUserLoggedIn ? \"block\" : \"none\"\n      };\n      return React.createElement(\"div\", {\n        className: \"ui\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"banner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.users.find(function (user) {\n          return user.id === _this2.props.user_id;\n        }).cover_img,\n        alt: \"cover photo\",\n        className: this.props.users.find(function (user) {\n          return user.id === _this2.props.user_id;\n        }) ? \"cover-photo pointer\" : \"cover-photo\",\n        onClick: this.props.users.find(function (user) {\n          return user.id === _this2.props.user_id;\n        }) ? this.toggleEditCover : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), this.state.showEditCover ? React.createElement(EditCover, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }) : null, React.createElement(\"img\", {\n        src: this.props.users.find(function (user) {\n          return user.id === _this2.props.user_id;\n        }).profile_img,\n        alt: \"profile pic\",\n        className: \"profile-picture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.props.users.find(function (user) {\n        return user.id === _this2.props.user_id;\n      }).username)), React.createElement(\"div\", {\n        style: show,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(NewPostForm, {\n        addPost: this.props.addPost,\n        users: this.props.users,\n        user_id: this.props.user_id,\n        currentUser: this.props.currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"post-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.showPostArray()));\n    }\n  }]);\n\n  return PostsContainer;\n}(Component);\n\nexport default withRouter(PostsContainer);","map":{"version":3,"sources":["/Users/flatironschool/flatiron/mod5/week2/playtime/src/containers/PostsContainer.js"],"names":["React","Component","Post","NewPostForm","withRouter","EditCover","PostsContainer","state","user_id","props","showEditCover","showPostArray","posts","filter","post","location","pathname","friend_id","currentUser","id","parseInt","reverse","map","addComment","deleteHandler","editPostHandler","isUserLoggedIn","users","comments","toggleEditCover","setState","console","log","show","display","find","user","cover_img","profile_img","username","addPost"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Post from \"../components/Post\";\nimport NewPostForm from \"../components/NewPostForm\";\nimport { withRouter } from \"react-router-dom\";\nimport EditCover from \"../components/EditCover\";\n\nclass PostsContainer extends Component {\n  state = {\n    user_id: this.props.user_id,\n    showEditCover: false\n  };\n\n  showPostArray = () => {\n    let posts = this.props.posts\n      .filter(post => {\n        return this.props.location.pathname === \"/home\"\n          ? post.friend_id === this.props.currentUser.id\n          : post.friend_id === parseInt(this.props.user_id);\n      })\n      .reverse();\n\n    return (\n      <div className=\"posts-container\">\n        {posts.map(post => {\n          return (\n            <div key={post.id} className=\"content-wrapper\">\n              <Post\n                post={post}\n                addComment={this.props.addComment}\n                currentUser={this.props.currentUser}\n                deleteHandler={this.props.deleteHandler}\n                editPostHandler={this.props.editPostHandler}\n                // likes={this.props.likes}\n                isUserLoggedIn={this.props.isUserLoggedIn}\n                users={this.props.users}\n                comments={this.props.comments}\n              />\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  toggleEditCover = () => {\n    this.setState({ showEditCover: !this.state.showEditCover });\n  };\n\n  render() {\n    console.log(this.state.showEditCover);\n    const show = { display: this.props.isUserLoggedIn ? \"block\" : \"none\" };\n    return (\n      <div className=\"ui\">\n        <div className=\"banner\">\n          <img\n            src={\n              this.props.users.find(user => user.id === this.props.user_id)\n                .cover_img\n            }\n            alt=\"cover photo\"\n            className={this.props.users.find(user => user.id === this.props.user_id) ? \"cover-photo pointer\" : \"cover-photo\"}\n            onClick={this.props.users.find(user => user.id === this.props.user_id) ? this.toggleEditCover : null }\n          />\n          {this.state.showEditCover ? <EditCover /> : null}\n          <img\n            src={\n              this.props.users.find(user => user.id === this.props.user_id)\n                .profile_img\n            }\n            alt=\"profile pic\"\n            className=\"profile-picture\"\n          />\n          <h2 className=\"username\">\n            {\n              this.props.users.find(user => user.id === this.props.user_id)\n                .username\n            }\n          </h2>\n        </div>\n\n        <div style={show}>\n          <NewPostForm\n            addPost={this.props.addPost}\n            users={this.props.users}\n            user_id={this.props.user_id}\n            currentUser={this.props.currentUser}\n          />\n        </div>\n        <div className=\"post-container\">{this.showPostArray()}</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(PostsContainer);\n"]},"metadata":{},"sourceType":"module"}