{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/flatiron/mod5/week2/playtime/src/containers/PostsContainer.js\";\nimport React, { Component } from \"react\";\nimport Post from \"../components/Post\";\nimport NewPostForm from \"../components/NewPostForm\";\nimport { withRouter } from \"react-router-dom\";\nimport EditCover from \"../components/EditCover\";\nimport EditProfilePic from \"../components/EditProfilePic\";\n\nvar PostsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostsContainer, _Component);\n\n  function PostsContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostsContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostsContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      user_id: _this.props.user_id,\n      showEditCover: false,\n      showEditProfilePic: false\n    };\n\n    _this.editCover = function () {\n      _this.props.editCover();\n\n      _this.setState({\n        showEditCover: false\n      });\n    };\n\n    _this.editProfilePic = function () {\n      _this.props.editProfilePic();\n\n      _this.setState({\n        showEditProfilePic: false\n      });\n    };\n\n    _this.hideEditCoverAndProfilePic = function () {\n      _this.setState({\n        showEditCover: false,\n        showEditProfilePic: false\n      });\n    };\n\n    _this.showPostArray = function () {\n      var posts = _this.props.posts.filter(function (post) {\n        return _this.props.location.pathname === \"/home\" ? post.friend_id === _this.props.currentUser.id : post.friend_id === parseInt(_this.props.user_id);\n      }).reverse();\n\n      return React.createElement(\"div\", {\n        className: \"posts-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, posts.map(function (post) {\n        return React.createElement(\"div\", {\n          key: post.id,\n          className: \"content-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(Post, {\n          post: post,\n          addComment: _this.props.addComment,\n          currentUser: _this.props.currentUser,\n          deleteHandler: _this.props.deleteHandler,\n          editPostHandler: _this.props.editPostHandler // likes={this.props.likes}\n          ,\n          isUserLoggedIn: _this.props.isUserLoggedIn,\n          users: _this.props.users,\n          comments: _this.props.comments,\n          hideEditCoverAndProfilePic: _this.hideEditCoverAndProfilePic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }));\n      }));\n    };\n\n    _this.toggleEditCover = function () {\n      _this.setState({\n        showEditCover: !_this.state.showEditCover\n      });\n    };\n\n    _this.toggleEditProfilePic = function () {\n      _this.setState({\n        showEditProfilePic: !_this.state.showEditProfilePic\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PostsContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var show = {\n        display: this.props.isUserLoggedIn ? \"block\" : \"none\"\n      };\n      return React.createElement(\"div\", {\n        className: \"ui\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"banner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.users.find(function (user) {\n          return user.id === _this2.props.user_id;\n        }).cover_img,\n        alt: \"cover photo\",\n        className: this.props.user_id === this.props.currentUser.id ? \"cover-photo pointer\" : \"cover-photo\",\n        onClick: this.props.user_id === this.props.currentUser.id ? this.toggleEditCover : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), this.state.showEditCover ? React.createElement(EditCover, {\n        editCover: this.editCover,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }) : null, React.createElement(\"img\", {\n        src: this.props.users.find(function (user) {\n          return user.id === _this2.props.user_id;\n        }).profile_img,\n        alt: \"profile pic\",\n        className: this.props.user_id === this.props.currentUser.id ? \"profile-picture pointer\" : \"profile-picture\",\n        onClick: this.props.user_id === this.props.currentUser.id ? this.toggleEditProfilePic : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), this.state.showEditProfilePic ? React.createElement(EditProfilePic, {\n        editProfilePic: this.editProfilePic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }) : null, React.createElement(\"h2\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.props.users.find(function (user) {\n        return user.id === _this2.props.user_id;\n      }).username)), React.createElement(\"div\", {\n        style: show,\n        className: \"posts-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(NewPostForm, {\n        addPost: this.props.addPost,\n        users: this.props.users,\n        user_id: this.props.user_id,\n        currentUser: this.props.currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"post-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, this.showPostArray()));\n    }\n  }]);\n\n  return PostsContainer;\n}(Component);\n\nexport default withRouter(PostsContainer);","map":{"version":3,"sources":["/Users/flatironschool/flatiron/mod5/week2/playtime/src/containers/PostsContainer.js"],"names":["React","Component","Post","NewPostForm","withRouter","EditCover","EditProfilePic","PostsContainer","state","user_id","props","showEditCover","showEditProfilePic","editCover","setState","editProfilePic","hideEditCoverAndProfilePic","showPostArray","posts","filter","post","location","pathname","friend_id","currentUser","id","parseInt","reverse","map","addComment","deleteHandler","editPostHandler","isUserLoggedIn","users","comments","toggleEditCover","toggleEditProfilePic","show","display","find","user","cover_img","profile_img","username","addPost"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Post from \"../components/Post\";\nimport NewPostForm from \"../components/NewPostForm\";\nimport { withRouter } from \"react-router-dom\";\nimport EditCover from \"../components/EditCover\";\nimport EditProfilePic from \"../components/EditProfilePic\";\n\nclass PostsContainer extends Component {\n  state = {\n    user_id: this.props.user_id,\n    showEditCover: false,\n    showEditProfilePic: false\n  };\n\n  editCover = () => {\n    this.props.editCover();\n    this.setState({ showEditCover: false });\n  };\n\n  editProfilePic = () => {\n    this.props.editProfilePic();\n    this.setState({ showEditProfilePic: false });\n  };\n\n  hideEditCoverAndProfilePic = () => {\n    this.setState({ showEditCover: false, showEditProfilePic: false });\n  };\n\n  showPostArray = () => {\n    let posts = this.props.posts\n      .filter(post => {\n        return this.props.location.pathname === \"/home\"\n          ? post.friend_id === this.props.currentUser.id\n          : post.friend_id === parseInt(this.props.user_id);\n      })\n      .reverse();\n\n    return (\n      <div className=\"posts-container\">\n        {posts.map(post => {\n          return (\n            <div key={post.id} className=\"content-wrapper\">\n              <Post\n                post={post}\n                addComment={this.props.addComment}\n                currentUser={this.props.currentUser}\n                deleteHandler={this.props.deleteHandler}\n                editPostHandler={this.props.editPostHandler}\n                // likes={this.props.likes}\n                isUserLoggedIn={this.props.isUserLoggedIn}\n                users={this.props.users}\n                comments={this.props.comments}\n                hideEditCoverAndProfilePic={this.hideEditCoverAndProfilePic}\n              />\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  toggleEditCover = () => {\n    this.setState({ showEditCover: !this.state.showEditCover });\n  };\n\n  toggleEditProfilePic = () => {\n    this.setState({ showEditProfilePic: !this.state.showEditProfilePic });\n  };\n\n  render() {\n    const show = { display: this.props.isUserLoggedIn ? \"block\" : \"none\" };\n    return (\n      <div className=\"ui\">\n        <div className=\"banner\">\n          <img\n            src={\n              this.props.users.find(user => user.id === this.props.user_id)\n                .cover_img\n            }\n            alt=\"cover photo\"\n            className={\n              this.props.user_id === this.props.currentUser.id\n                ? \"cover-photo pointer\"\n                : \"cover-photo\"\n            }\n            onClick={\n              this.props.user_id === this.props.currentUser.id\n                ? this.toggleEditCover\n                : null\n            }\n          />\n          {this.state.showEditCover ? (\n            <EditCover editCover={this.editCover} />\n          ) : null}\n          <img\n            src={\n              this.props.users.find(user => user.id === this.props.user_id)\n                .profile_img\n            }\n            alt=\"profile pic\"\n            className={\n              this.props.user_id === this.props.currentUser.id\n                ? \"profile-picture pointer\"\n                : \"profile-picture\"\n            }\n            onClick={\n              this.props.user_id === this.props.currentUser.id\n                ? this.toggleEditProfilePic\n                : null\n            }\n          />\n          {this.state.showEditProfilePic ? (\n            <EditProfilePic editProfilePic={this.editProfilePic} />\n          ) : null}\n          <h2 className=\"username\">\n            {\n              this.props.users.find(user => user.id === this.props.user_id)\n                .username\n            }\n          </h2>\n        </div>\n\n        <div style={show} className=\"posts-container\">\n          <NewPostForm\n            addPost={this.props.addPost}\n            users={this.props.users}\n            user_id={this.props.user_id}\n            currentUser={this.props.currentUser}\n          />\n        </div>\n        <div className=\"post-container\">{this.showPostArray()}</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(PostsContainer);\n"]},"metadata":{},"sourceType":"module"}