{"ast":null,"code":"export var LOAD_USERS = \"LOAD_USERS\";\nexport var CHANGE_USER = \"CHANGE_USER\";\nexport var ADD_USER = \"ADD_USER\";\nexport var getUsers = function getUsers() {\n  return function (dispatch) {\n    return fetch(\"http://localhost:3000/api/v1/users\").then(function (res) {\n      return res.json();\n    }).then(function (users) {\n      dispatch({\n        type: LOAD_USERS,\n        payload: users\n      });\n      console.log(users);\n    }).then(console.log).catch(console.error);\n  };\n};\nexport var changeUsers = function changeUsers(user) {\n  return function (dispatch) {\n    return {\n      type: CHANGE_USER,\n      payload: user\n    };\n  };\n};\nexport var addUser = function addUser(user) {\n  return function (dispatch) {\n    return fetch(\"http://locahost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        first_name: user.first_name,\n        last_name: user.last_name,\n        username: user.username,\n        email: user.email,\n        password: user.password,\n        city: user.city,\n        school: user.school,\n        work: user.work,\n        lvl: user.lvl,\n        exp: user.exp,\n        energy: user.energy,\n        max_energy: user.max_energy,\n        speed: user.speed,\n        profile_img: user.profile_img,\n        cover_img: user.cover_img\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      dispatch({\n        type: ADD_USER,\n        payload: user\n      });\n    }).catch(console.error);\n  };\n};","map":{"version":3,"sources":["/Users/flatironschool/flatiron/mod5/week2/playtime/src/actions/userActions.js"],"names":["LOAD_USERS","CHANGE_USER","ADD_USER","getUsers","dispatch","fetch","then","res","json","users","type","payload","console","log","catch","error","changeUsers","user","addUser","method","headers","Accept","body","JSON","stringify","first_name","last_name","username","email","password","city","school","work","lvl","exp","energy","max_energy","speed","profile_img","cover_img"],"mappings":"AAAA,OAAO,IAAMA,UAAU,GAAG,YAAnB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AAEP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC5B,SAAO,UAAAC,QAAQ,EAAI;AACjB,WAAOC,KAAK,CAAC,oCAAD,CAAL,CACJC,IADI,CACC,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADJ,EAEJF,IAFI,CAEC,UAAAG,KAAK,EAAI;AACbL,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAEV,UADC;AAEPW,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD,KARI,EASJH,IATI,CASCM,OAAO,CAACC,GATT,EAUJC,KAVI,CAUEF,OAAO,CAACG,KAVV,CAAP;AAWD,GAZD;AAaD,CAdM;AAgBP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;AACjC,SAAO,UAAAb,QAAQ,EAAI;AACjB,WAAO;AACLM,MAAAA,IAAI,EAAET,WADD;AAELU,MAAAA,OAAO,EAAEM;AAFJ,KAAP;AAID,GALD;AAMD,CAPM;AASP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAD,IAAI,EAAI;AAC7B,SAAO,UAAAb,QAAQ,EAAI;AACjB,WAAOC,KAAK,CAAC,mCAAD,EAAsC;AAChDc,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAFuC;AAMhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,UAAU,EAAER,IAAI,CAACQ,UADE;AAEnBC,QAAAA,SAAS,EAAET,IAAI,CAACS,SAFG;AAGnBC,QAAAA,QAAQ,EAAEV,IAAI,CAACU,QAHI;AAInBC,QAAAA,KAAK,EAAEX,IAAI,CAACW,KAJO;AAKnBC,QAAAA,QAAQ,EAAEZ,IAAI,CAACY,QALI;AAMnBC,QAAAA,IAAI,EAAEb,IAAI,CAACa,IANQ;AAOnBC,QAAAA,MAAM,EAAEd,IAAI,CAACc,MAPM;AAQnBC,QAAAA,IAAI,EAAEf,IAAI,CAACe,IARQ;AASnBC,QAAAA,GAAG,EAAEhB,IAAI,CAACgB,GATS;AAUnBC,QAAAA,GAAG,EAAEjB,IAAI,CAACiB,GAVS;AAWnBC,QAAAA,MAAM,EAAElB,IAAI,CAACkB,MAXM;AAYnBC,QAAAA,UAAU,EAAEnB,IAAI,CAACmB,UAZE;AAanBC,QAAAA,KAAK,EAAEpB,IAAI,CAACoB,KAbO;AAcnBC,QAAAA,WAAW,EAAErB,IAAI,CAACqB,WAdC;AAenBC,QAAAA,SAAS,EAAEtB,IAAI,CAACsB;AAfG,OAAf;AAN0C,KAAtC,CAAL,CAwBJjC,IAxBI,CAwBC,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAxBJ,EAyBJF,IAzBI,CAyBC,UAAAW,IAAI,EAAI;AACZb,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAER,QADC;AAEPS,QAAAA,OAAO,EAAEM;AAFF,OAAD,CAAR;AAID,KA9BI,EA+BJH,KA/BI,CA+BEF,OAAO,CAACG,KA/BV,CAAP;AAgCD,GAjCD;AAkCD,CAnCM","sourcesContent":["export const LOAD_USERS = \"LOAD_USERS\";\nexport const CHANGE_USER = \"CHANGE_USER\";\nexport const ADD_USER = \"ADD_USER\";\n\nexport const getUsers = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/api/v1/users\")\n      .then(res => res.json())\n      .then(users => {\n        dispatch({\n          type: LOAD_USERS,\n          payload: users\n        });\n        console.log(users)\n      })\n      .then(console.log)\n      .catch(console.error);\n  };\n};\n\nexport const changeUsers = user => {\n  return dispatch => {\n    return {\n      type: CHANGE_USER,\n      payload: user\n    };\n  };\n};\n\nexport const addUser = user => {\n  return dispatch => {\n    return fetch(\"http://locahost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        first_name: user.first_name,\n        last_name: user.last_name,\n        username: user.username,\n        email: user.email,\n        password: user.password,\n        city: user.city,\n        school: user.school,\n        work: user.work,\n        lvl: user.lvl,\n        exp: user.exp,\n        energy: user.energy,\n        max_energy: user.max_energy,\n        speed: user.speed,\n        profile_img: user.profile_img,\n        cover_img: user.cover_img\n      })\n    })\n      .then(res => res.json())\n      .then(user => {\n        dispatch({\n          type: ADD_USER,\n          payload: user\n        });\n      })\n      .catch(console.error);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}