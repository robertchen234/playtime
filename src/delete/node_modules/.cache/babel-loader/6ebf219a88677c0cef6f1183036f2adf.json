{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/flatiron/mod5/week2/playtime/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport HomePage from \"./components/HomePage\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { getUsers } from \"./actions/userActions\";\nimport { connect } from \"react-redux\";\nimport UserShowPage from \"./containers/PostsContainer\";\nimport EditProfileForm from \"./components/EditProfileForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport SignUpForm from \"./components/SignUpForm\";\nimport SearchPage from \"./components/SearchPage\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isUserLoggedIn: false,\n      currentUser: {\n        id: 0,\n        first_name: \"\",\n        last_name: \"\",\n        username: \"\",\n        // password: \"\",\n        email: \"\",\n        city: \"\",\n        school: \"\",\n        work: \"\",\n        lvl: 1,\n        exp: 0,\n        energy: 5,\n        max_energy: 5,\n        speed: 1,\n        profile_img: \"https://c1.staticflickr.com/6/5643/23778807571_e9649ee35e_b.jpg\",\n        cover_img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Friends_logo.svg/2000px-Friends_logo.svg.png\"\n      },\n      users: [],\n      posts: [],\n      comments: [],\n      token: \"\",\n      search: \"\"\n    };\n\n    _this.statsHandler = function () {\n      if (_this.state.currentUser.lvl === 1 && _this.state.currentUser.exp >= 200) {\n        fetch(\"http://localhost:3000/api/v1/users/\".concat(_this.state.currentUser.id), {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: localStorage.getItem(\"token\")\n          },\n          body: JSON.stringify({\n            lvl: _this.state.lvl += 1,\n            exp: 0\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          var newArr = _toConsumableArray(_this.state.users);\n\n          newArr = newArr.map(function (user) {\n            if (user.id === _this.state.currentUser.id) {\n              return data;\n            } else {\n              return user;\n            }\n          });\n\n          _this.setState({\n            users: newArr\n          });\n        });\n      }\n    };\n\n    _this.changeHandler = function (e) {\n      _this.setState({\n        search: e.target.value\n      });\n    };\n\n    _this.clearSearch = function () {\n      _this.setState({\n        search: \"\"\n      });\n    };\n\n    _this.addPost = function (input, playerId, friendId) {\n      fetch(\"http://localhost:3000/api/v1/posts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          content: input,\n          player_id: playerId,\n          friend_id: friendId\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var newArr = _toConsumableArray(_this.state.posts);\n\n        newArr.push(data);\n\n        _this.setState({\n          posts: newArr\n        });\n      });\n    };\n\n    _this.addComment = function (input, playerId, postId) {\n      fetch(\"http://localhost:3000/api/v1/comments\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          comment: input,\n          user_id: playerId,\n          post_id: postId\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var newArr = [].concat(_toConsumableArray(_this.state.comments), [data]);\n\n        _this.setState({\n          comments: newArr\n        });\n      });\n    };\n\n    _this.editCover = function (input) {\n      fetch(\"http://localhost:3000/api/v1/users/\".concat(_this.state.currentUser.id), {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          cover_img: input\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var newArr = _toConsumableArray(_this.state.users);\n\n        newArr = newArr.map(function (user) {\n          if (user.id === _this.state.currentUser.id) {\n            return data;\n          } else {\n            return user;\n          }\n        });\n\n        _this.setState({\n          users: newArr\n        });\n      });\n    };\n\n    _this.editProfilePic = function (input) {\n      fetch(\"http://localhost:3000/api/v1/users/\".concat(_this.state.currentUser.id), {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          profile_img: input\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var newArr = _toConsumableArray(_this.state.users);\n\n        newArr = newArr.map(function (user) {\n          if (user.id === _this.state.currentUser.id) {\n            return data;\n          } else {\n            return user;\n          }\n        });\n\n        _this.setState({\n          users: newArr\n        });\n      });\n    };\n\n    _this.updateHandler = function (currentUser) {\n      _this.setState({\n        currentUser: currentUser\n      });\n\n      fetch(\"http://localhost:3000/api/v1/users/\".concat(currentUser.id), {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: _this.state.token\n        },\n        body: JSON.stringify({\n          username: currentUser.username,\n          password: currentUser.password\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (user) {\n        _this.setState({\n          currentUser: {\n            id: user.id,\n            username: user.username\n          }\n        });\n\n        _this.props.history.push(\"/home\");\n      });\n    };\n\n    _this.submitSignUpHandler = function (userInfo, event) {\n      event.preventDefault();\n\n      _this.createUser(userInfo);\n\n      _this.props.history.push(\"/home\");\n    };\n\n    _this.createUser = function (userInfo) {\n      fetch(\"http://localhost:3000/api/v1/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          username: userInfo.username,\n          password: userInfo.password\n        })\n      }).then(function (res) {\n        if (res.status === 406) throw new Error(res.status);else return res.json();\n      }).then(function (res) {\n        localStorage.setItem(\"token\", res.jwt);\n        localStorage.setItem(\"id\", res.user.id);\n        localStorage.setItem(\"username\", res.user.username); //come back\n\n        _this.setState({\n          isUserLoggedIn: true,\n          token: localStorage.getItem(\"token\"),\n          currentUser: {\n            id: res.user.id,\n            username: res.user.username,\n            first_name: res.user.first_name,\n            last_name: res.user.last_name,\n            password: \"\"\n          }\n        });\n      }).catch(function (error) {\n        localStorage.setItem(\"signupError\", \"Duplicate account\");\n\n        _this.props.history.push(\"/signup\");\n      });\n    };\n\n    _this.submitLoginHandler = function (userInfo, event) {\n      event.preventDefault();\n\n      _this.getUser(userInfo);\n\n      _this.props.history.push(\"/home\");\n    };\n\n    _this.getUser = function (userInfo) {\n      fetch(\"http://localhost:3000/api/v1/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          username: userInfo.loginUsername,\n          password: userInfo.loginPassword\n        })\n      }).then(function (res) {\n        if (res.status === 401) throw new Error(res.status);else return res.json();\n      }) // .then(res => res.json())\n      .then(function (res) {\n        localStorage.setItem(\"token\", res.jwt);\n        localStorage.setItem(\"id\", res.user.id);\n        localStorage.setItem(\"username\", res.user.username);\n        localStorage.setItem(\"first_name\", res.user.first_name);\n        localStorage.setItem(\"last_name\", res.user.last_name);\n        localStorage.setItem(\"email\", res.user.email);\n        localStorage.setItem(\"city\", res.user.city);\n        localStorage.setItem(\"school\", res.user.school);\n        localStorage.setItem(\"work\", res.user.work);\n        localStorage.setItem(\"lvl\", res.user.lvl);\n        localStorage.setItem(\"exp\", res.user.exp);\n        localStorage.setItem(\"energy\", res.user.energy);\n        localStorage.setItem(\"max_energy\", res.user.max_energy);\n        localStorage.setItem(\"speed\", res.user.speed);\n        localStorage.setItem(\"profile_img\", res.user.profile_img);\n        localStorage.setItem(\"cover_img\", res.user.cover_img);\n\n        _this.setState({\n          isUserLoggedIn: true,\n          token: localStorage.getItem(\"token\"),\n          currentUser: {\n            id: res.user.id,\n            username: res.user.username,\n            first_name: res.user.first_name,\n            last_name: res.user.last_name,\n            email: res.user.email,\n            password: \"\",\n            city: res.user.city,\n            school: res.user.school,\n            work: res.user.work,\n            lvl: res.user.lvl,\n            exp: res.user.exp,\n            energy: res.user.energy,\n            max_energy: res.user.max_energy,\n            speed: res.user.speed,\n            profile_img: res.user.profile_img,\n            cover_img: res.user.cover_img\n          }\n        });\n      }).catch(function (error) {\n        localStorage.setItem(\"loginError\", \"Invalid account/password\");\n\n        _this.props.history.push(\"/login\"); // this.setState({ alert_error: true });\n        // alert(`HTTP ERROR: ${error}, Unknown account or password!`);\n\n      });\n    };\n\n    _this.logout = function () {\n      //need to remove local storage token\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"id\");\n      localStorage.removeItem(\"username\");\n\n      _this.setState({\n        currentUser: {\n          id: 0,\n          username: \"\"\n        },\n        isUserLoggedIn: false,\n        token: \"\"\n      });\n\n      _this.props.history.push(\"/home\");\n    };\n\n    _this.deleteHandler = function (id) {\n      var posts = _toConsumableArray(_this.state.posts).filter(function (post) {\n        return post.id !== id;\n      });\n\n      _this.setState({\n        posts: posts\n      });\n    };\n\n    _this.editPostHandler = function (id, content) {\n      fetch(\"http://localhost:3000/api/v1/posts/\".concat(id), {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: _this.state.token\n        },\n        body: JSON.stringify({\n          content: content\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var newArr = _toConsumableArray(_this.state.posts);\n\n        newArr = newArr.map(function (post) {\n          if (post.id === id) {\n            return data;\n          } else {\n            return post;\n          }\n        });\n\n        _this.setState({\n          posts: newArr\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.getUsers();\n      fetch(\"http://localhost:3000/api/v1/posts\").then(function (resp) {\n        return resp.json();\n      }).then(function (posts) {\n        _this2.setState({\n          posts: posts\n        });\n      });\n      fetch(\"http://localhost:3000/api/v1/comments\").then(function (resp) {\n        return resp.json();\n      }).then(function (comments) {\n        _this2.setState({\n          comments: comments\n        });\n      });\n\n      if (localStorage.getItem(\"token\") !== null) {\n        this.setState({\n          currentUser: {\n            id: parseInt(localStorage.getItem(\"id\")),\n            username: localStorage.getItem(\"username\"),\n            first_name: localStorage.getItem(\"first_name\"),\n            last_name: localStorage.getItem(\"last_name\"),\n            email: localStorage.getItem(\"email\"),\n            city: localStorage.getItem(\"city\"),\n            school: localStorage.getItem(\"school\"),\n            work: localStorage.getItem(\"work\"),\n            lvl: localStorage.getItem(\"lvl\"),\n            exp: localStorage.getItem(\"exp\"),\n            energy: localStorage.getItem(\"energy\"),\n            max_energy: localStorage.getItem(\"max_energy\"),\n            speed: localStorage.getItem(\"speed\"),\n            profile_img: localStorage.getItem(\"profile_img\"),\n            cover_img: localStorage.getItem(\"cover_img\")\n          },\n          token: localStorage.getItem(\"token\"),\n          isUserLoggedIn: true\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      fetch(\"http://localhost:3000/api/v1/users\").then(function (resp) {\n        return resp.json();\n      }).then(function (users) {\n        localStorage.setItem(\"users\", JSON.stringify(users));\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      localStorage.clear();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state.currentUser);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        isUserLoggedIn: this.state.isUserLoggedIn,\n        logout: this.logout,\n        currentPath: this.props.location.pathname,\n        search: this.state.search,\n        changeHandler: this.changeHandler,\n        currentUser: this.state.currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), this.state.search === \"\" ? React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/home\",\n        render: function render(RouterProps) {\n          return _this3.state.isUserLoggedIn ? React.createElement(UserShowPage, {\n            user_id: _this3.state.currentUser.id,\n            posts: _this3.state.posts,\n            addPost: _this3.addPost,\n            addComment: _this3.addComment,\n            isUserLoggedIn: _this3.state.isUserLoggedIn,\n            currentUser: _this3.state.currentUser,\n            deleteHandler: _this3.deleteHandler,\n            editPostHandler: _this3.editPostHandler,\n            comments: _this3.state.comments,\n            users: JSON.parse(localStorage.getItem(\"users\")),\n            editCover: _this3.editCover,\n            editProfilePic: _this3.editProfilePic,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }) : React.createElement(HomePage, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/user/:id\",\n        render: function render(RouterProps) {\n          return React.createElement(UserShowPage, {\n            user_id: parseInt(RouterProps.match.params.id),\n            posts: _this3.state.posts,\n            addPost: _this3.addPost,\n            addComment: _this3.addComment,\n            isUserLoggedIn: _this3.state.isUserLoggedIn,\n            currentUser: _this3.state.currentUser,\n            deleteHandler: _this3.deleteHandler,\n            editPostHandler: _this3.editPostHandler,\n            comments: _this3.state.comments,\n            users: JSON.parse(localStorage.getItem(\"users\")),\n            editCover: _this3.editCover,\n            editProfilePic: _this3.editProfilePic,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/search\",\n        render: function render() {\n          return React.createElement(SearchPage, {\n            clearSearch: _this3.clearSearch,\n            isUserLoggedIn: _this3.state.isUserLoggedIn,\n            search: _this3.state.search,\n            users: _this3.props.users,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/editProfile\",\n        render: function render() {\n          return React.createElement(EditProfileForm, {\n            isUserLoggedIn: _this3.state.isUserLoggedIn,\n            currentUser: _this3.state.currentUser,\n            updateHandler: _this3.updateHandler,\n            mods: _this3.state.mods,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login\",\n        render: function render() {\n          return React.createElement(LoginForm, {\n            submitLoginHandler: _this3.submitLoginHandler,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/signUp\",\n        render: function render() {\n          return React.createElement(SignUpForm, {\n            submitSignUpHandler: _this3.submitSignUpHandler,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        component: HomePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })) : React.createElement(SearchPage, {\n        clearSearch: this.clearSearch,\n        isUserLoggedIn: this.state.isUserLoggedIn,\n        search: this.state.search,\n        users: this.props.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getUsers: bindActionCreators(getUsers, dispatch)\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/flatironschool/flatiron/mod5/week2/playtime/src/App.js"],"names":["React","Component","NavBar","HomePage","Route","Switch","withRouter","bindActionCreators","getUsers","connect","UserShowPage","EditProfileForm","LoginForm","SignUpForm","SearchPage","App","state","isUserLoggedIn","currentUser","id","first_name","last_name","username","email","city","school","work","lvl","exp","energy","max_energy","speed","profile_img","cover_img","users","posts","comments","token","search","statsHandler","fetch","method","headers","Accept","Authorization","localStorage","getItem","body","JSON","stringify","then","res","json","data","newArr","map","user","setState","changeHandler","e","target","value","clearSearch","addPost","input","playerId","friendId","content","player_id","friend_id","push","addComment","postId","comment","user_id","post_id","editCover","editProfilePic","updateHandler","password","resp","props","history","submitSignUpHandler","userInfo","event","preventDefault","createUser","status","Error","setItem","jwt","catch","error","submitLoginHandler","getUser","loginUsername","loginPassword","logout","removeItem","deleteHandler","filter","post","editPostHandler","parseInt","prevProps","prevState","clear","console","log","location","pathname","RouterProps","parse","match","params","mods","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport HomePage from \"./components/HomePage\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { getUsers } from \"./actions/userActions\";\nimport { connect } from \"react-redux\";\nimport UserShowPage from \"./containers/PostsContainer\";\nimport EditProfileForm from \"./components/EditProfileForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport SignUpForm from \"./components/SignUpForm\";\nimport SearchPage from \"./components/SearchPage\";\n\nclass App extends Component {\n  state = {\n    isUserLoggedIn: false,\n    currentUser: {\n      id: 0,\n      first_name: \"\",\n      last_name: \"\",\n      username: \"\",\n      // password: \"\",\n      email: \"\",\n      city: \"\",\n      school: \"\",\n      work: \"\",\n      lvl: 1,\n      exp: 0,\n      energy: 5,\n      max_energy: 5,\n      speed: 1,\n      profile_img:\n        \"https://c1.staticflickr.com/6/5643/23778807571_e9649ee35e_b.jpg\",\n      cover_img:\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Friends_logo.svg/2000px-Friends_logo.svg.png\"\n    },\n    users: [],\n    posts: [],\n    comments: [],\n    token: \"\",\n    search: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getUsers();\n\n    fetch(\"http://localhost:3000/api/v1/posts\")\n      .then(resp => resp.json())\n      .then(posts => {\n        this.setState({ posts });\n      });\n\n    fetch(\"http://localhost:3000/api/v1/comments\")\n      .then(resp => resp.json())\n      .then(comments => {\n        this.setState({ comments });\n      });\n\n    if (localStorage.getItem(\"token\") !== null) {\n      this.setState({\n        currentUser: {\n          id: parseInt(localStorage.getItem(\"id\")),\n          username: localStorage.getItem(\"username\"),\n          first_name: localStorage.getItem(\"first_name\"),\n          last_name: localStorage.getItem(\"last_name\"),\n          email: localStorage.getItem(\"email\"),\n          city: localStorage.getItem(\"city\"),\n          school: localStorage.getItem(\"school\"),\n          work: localStorage.getItem(\"work\"),\n          lvl: localStorage.getItem(\"lvl\"),\n          exp: localStorage.getItem(\"exp\"),\n          energy: localStorage.getItem(\"energy\"),\n          max_energy: localStorage.getItem(\"max_energy\"),\n          speed: localStorage.getItem(\"speed\"),\n          profile_img: localStorage.getItem(\"profile_img\"),\n          cover_img: localStorage.getItem(\"cover_img\")\n        },\n        token: localStorage.getItem(\"token\"),\n        isUserLoggedIn: true\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    fetch(\"http://localhost:3000/api/v1/users\")\n      .then(resp => resp.json())\n      .then(users => {\n        localStorage.setItem(\"users\", JSON.stringify(users));\n      });\n  }\n\n  componentWillUnmount() {\n    localStorage.clear();\n  }\n\n  statsHandler = () => {\n    if (this.state.currentUser.lvl === 1 && this.state.currentUser.exp >= 200) {\n      \n        fetch(`http://localhost:3000/api/v1/users/${this.state.currentUser.id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: localStorage.getItem(\"token\")\n          },\n          body: JSON.stringify({\n            lvl: this.state.lvl += 1,\n            exp: 0,\n          })\n        })\n          .then(res => res.json())\n          .then(data => {\n            let newArr = [...this.state.users];\n            newArr = newArr.map(user => {\n              if (user.id === this.state.currentUser.id) {\n                return data;\n              } else {\n                return user;\n              }\n            });\n            this.setState({ users: newArr });\n          });\n\n\n    }\n  }\n\n  changeHandler = e => {\n    this.setState({\n      search: e.target.value\n    });\n  };\n\n  clearSearch = () => {\n    this.setState({\n      search: \"\"\n    });\n  };\n\n  render() {\n    console.log(this.state.currentUser);\n    return (\n      <div>\n        <NavBar\n          isUserLoggedIn={this.state.isUserLoggedIn}\n          logout={this.logout}\n          currentPath={this.props.location.pathname}\n          search={this.state.search}\n          changeHandler={this.changeHandler}\n          currentUser={this.state.currentUser}\n        />\n\n        {this.state.search === \"\" ? (\n          <Switch>\n            <Route\n              path=\"/home\"\n              render={RouterProps => {\n                return this.state.isUserLoggedIn ? (\n                  <UserShowPage\n                    user_id={this.state.currentUser.id}\n                    posts={this.state.posts}\n                    addPost={this.addPost}\n                    addComment={this.addComment}\n                    isUserLoggedIn={this.state.isUserLoggedIn}\n                    currentUser={this.state.currentUser}\n                    deleteHandler={this.deleteHandler}\n                    editPostHandler={this.editPostHandler}\n                    comments={this.state.comments}\n                    users={JSON.parse(localStorage.getItem(\"users\"))}\n                    editCover={this.editCover}\n                    editProfilePic={this.editProfilePic}\n                  />\n                ) : (\n                  <HomePage />\n                );\n              }}\n            />\n            <Route\n              path=\"/user/:id\"\n              render={RouterProps => {\n                return (\n                  <UserShowPage\n                    user_id={parseInt(RouterProps.match.params.id)}\n                    posts={this.state.posts}\n                    addPost={this.addPost}\n                    addComment={this.addComment}\n                    isUserLoggedIn={this.state.isUserLoggedIn}\n                    currentUser={this.state.currentUser}\n                    deleteHandler={this.deleteHandler}\n                    editPostHandler={this.editPostHandler}\n                    comments={this.state.comments}\n                    users={JSON.parse(localStorage.getItem(\"users\"))}\n                    editCover={this.editCover}\n                    editProfilePic={this.editProfilePic}\n                  />\n                );\n              }}\n            />\n            <Route\n              path=\"/search\"\n              render={() => {\n                return (\n                  <SearchPage\n                    clearSearch={this.clearSearch}\n                    isUserLoggedIn={this.state.isUserLoggedIn}\n                    search={this.state.search}\n                    users={this.props.users}\n                  />\n                );\n              }}\n            />\n            <Route\n              path=\"/editProfile\"\n              render={() => {\n                return (\n                  <EditProfileForm\n                    isUserLoggedIn={this.state.isUserLoggedIn}\n                    currentUser={this.state.currentUser}\n                    updateHandler={this.updateHandler}\n                    mods={this.state.mods}\n                  />\n                );\n              }}\n            />\n            <Route\n              path=\"/login\"\n              render={() => {\n                return (\n                  <LoginForm submitLoginHandler={this.submitLoginHandler} />\n                );\n              }}\n            />\n            <Route\n              path=\"/signUp\"\n              render={() => {\n                return (\n                  <SignUpForm submitSignUpHandler={this.submitSignUpHandler} />\n                );\n              }}\n            />\n            <Route path=\"/\" component={HomePage} />\n          </Switch>\n        ) : (\n          <SearchPage\n            clearSearch={this.clearSearch}\n            isUserLoggedIn={this.state.isUserLoggedIn}\n            search={this.state.search}\n            users={this.props.users}\n          />\n        )}\n      </div>\n    );\n  }\n\n  addPost = (input, playerId, friendId) => {\n    fetch(\"http://localhost:3000/api/v1/posts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        content: input,\n        player_id: playerId,\n        friend_id: friendId\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        let newArr = [...this.state.posts];\n        newArr.push(data);\n        this.setState({ posts: newArr });\n      });\n  };\n\n  addComment = (input, playerId, postId) => {\n    fetch(\"http://localhost:3000/api/v1/comments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        comment: input,\n        user_id: playerId,\n        post_id: postId\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        let newArr = [...this.state.comments, data];\n        this.setState({ comments: newArr });\n      });\n  };\n\n  editCover = input => {\n    fetch(`http://localhost:3000/api/v1/users/${this.state.currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        cover_img: input\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        let newArr = [...this.state.users];\n        newArr = newArr.map(user => {\n          if (user.id === this.state.currentUser.id) {\n            return data;\n          } else {\n            return user;\n          }\n        });\n        this.setState({ users: newArr });\n      });\n  };\n\n  editProfilePic = input => {\n    fetch(`http://localhost:3000/api/v1/users/${this.state.currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        profile_img: input\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        let newArr = [...this.state.users];\n        newArr = newArr.map(user => {\n          if (user.id === this.state.currentUser.id) {\n            return data;\n          } else {\n            return user;\n          }\n        });\n        this.setState({ users: newArr });\n      });\n  };\n\n  updateHandler = currentUser => {\n    this.setState({ currentUser });\n\n    fetch(`http://localhost:3000/api/v1/users/${currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: this.state.token\n      },\n      body: JSON.stringify({\n        username: currentUser.username,\n        password: currentUser.password\n      })\n    })\n      .then(resp => resp.json())\n      .then(user => {\n        this.setState({\n          currentUser: {\n            id: user.id,\n            username: user.username\n          }\n        });\n        this.props.history.push(\"/home\");\n      });\n  };\n\n  submitSignUpHandler = (userInfo, event) => {\n    event.preventDefault();\n    this.createUser(userInfo);\n    this.props.history.push(\"/home\");\n  };\n\n  createUser = userInfo => {\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        username: userInfo.username,\n        password: userInfo.password\n      })\n    })\n      .then(res => {\n        if (res.status === 406) throw new Error(res.status);\n        else return res.json();\n      })\n      .then(res => {\n        localStorage.setItem(\"token\", res.jwt);\n        localStorage.setItem(\"id\", res.user.id);\n        localStorage.setItem(\"username\", res.user.username);\n        //come back\n        this.setState({\n          isUserLoggedIn: true,\n          token: localStorage.getItem(\"token\"),\n          currentUser: {\n            id: res.user.id,\n            username: res.user.username,\n            first_name: res.user.first_name,\n            last_name: res.user.last_name,\n            password: \"\"\n          }\n        });\n      })\n      .catch(error => {\n        localStorage.setItem(\"signupError\", \"Duplicate account\");\n        this.props.history.push(\"/signup\");\n      });\n  };\n\n  submitLoginHandler = (userInfo, event) => {\n    event.preventDefault();\n    this.getUser(userInfo);\n    this.props.history.push(\"/home\");\n  };\n\n  getUser = userInfo => {\n    fetch(\"http://localhost:3000/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        username: userInfo.loginUsername,\n        password: userInfo.loginPassword\n      })\n    })\n      .then(res => {\n        if (res.status === 401) throw new Error(res.status);\n        else return res.json();\n      })\n      // .then(res => res.json())\n      .then(res => {\n        localStorage.setItem(\"token\", res.jwt);\n        localStorage.setItem(\"id\", res.user.id);\n        localStorage.setItem(\"username\", res.user.username);\n        localStorage.setItem(\"first_name\", res.user.first_name);\n        localStorage.setItem(\"last_name\", res.user.last_name);\n        localStorage.setItem(\"email\", res.user.email);\n        localStorage.setItem(\"city\", res.user.city);\n        localStorage.setItem(\"school\", res.user.school);\n        localStorage.setItem(\"work\", res.user.work);\n        localStorage.setItem(\"lvl\", res.user.lvl);\n        localStorage.setItem(\"exp\", res.user.exp);\n        localStorage.setItem(\"energy\", res.user.energy);\n        localStorage.setItem(\"max_energy\", res.user.max_energy);\n        localStorage.setItem(\"speed\", res.user.speed);\n        localStorage.setItem(\"profile_img\", res.user.profile_img);\n        localStorage.setItem(\"cover_img\", res.user.cover_img);\n\n        this.setState({\n          isUserLoggedIn: true,\n          token: localStorage.getItem(\"token\"),\n          currentUser: {\n            id: res.user.id,\n            username: res.user.username,\n            first_name: res.user.first_name,\n            last_name: res.user.last_name,\n            email: res.user.email,\n            password: \"\",\n            city: res.user.city,\n            school: res.user.school,\n            work: res.user.work,\n            lvl: res.user.lvl,\n            exp: res.user.exp,\n            energy: res.user.energy,\n            max_energy: res.user.max_energy,\n            speed: res.user.speed,\n            profile_img: res.user.profile_img,\n            cover_img: res.user.cover_img\n          }\n        });\n      })\n      .catch(error => {\n        localStorage.setItem(\"loginError\", \"Invalid account/password\");\n        this.props.history.push(\"/login\");\n        // this.setState({ alert_error: true });\n        // alert(`HTTP ERROR: ${error}, Unknown account or password!`);\n      });\n  };\n\n  logout = () => {\n    //need to remove local storage token\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"id\");\n    localStorage.removeItem(\"username\");\n\n    this.setState({\n      currentUser: {\n        id: 0,\n        username: \"\"\n      },\n      isUserLoggedIn: false,\n      token: \"\"\n    });\n\n    this.props.history.push(\"/home\");\n  };\n\n  deleteHandler = id => {\n    const posts = [...this.state.posts].filter(post => post.id !== id);\n    this.setState({ posts });\n  };\n\n  editPostHandler = (id, content) => {\n    fetch(`http://localhost:3000/api/v1/posts/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: this.state.token\n      },\n      body: JSON.stringify({\n        content\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        let newArr = [...this.state.posts];\n        newArr = newArr.map(post => {\n          if (post.id === id) {\n            return data;\n          } else {\n            return post;\n          }\n        });\n        this.setState({ posts: newArr });\n      });\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getUsers: bindActionCreators(getUsers, dispatch)\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n);\n"]},"metadata":{},"sourceType":"module"}