{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/flatiron/mod5/week2/playtime/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/flatiron/mod5/week2/playtime/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport HomePage from \"./components/HomePage\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport UserShowPage from \"./containers/PostsContainer\";\nimport EditProfileForm from \"./components/EditProfileForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport SignUpForm from \"./components/SignUpForm\";\nimport { bindActionCreators } from \"redux\";\nimport { getUsers } from \"./actions/userActions\";\nimport { connect } from \"react-redux\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isUserLoggedIn: false,\n      currentUser: {\n        id: 0,\n        first_name: \"\",\n        last_name: \"\",\n        username: \"\",\n        // password: \"\",\n        email: \"\",\n        city: \"\",\n        school: \"\",\n        work: \"\",\n        exp: 0\n      },\n      users: [],\n      posts: [],\n      comments: [],\n      token: \"\"\n    };\n\n    _this.addPost = function (input, playerId, friendId) {\n      fetch(\"http://localhost:3000/api/v1/posts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          content: input,\n          player_id: playerId,\n          friend_id: friendId\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var newArr = _toConsumableArray(_this.state.posts);\n\n        newArr.push(data);\n\n        _this.setState({\n          posts: newArr\n        });\n      });\n    };\n\n    _this.addComment = function (input, playerId, postId) {\n      fetch(\"http://localhost:3000/api/v1/comments\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          comment: input,\n          user_id: playerId,\n          post_id: postId\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var newArr = [].concat(_toConsumableArray(_this.state.comments), [data]);\n\n        _this.setState({\n          comments: newArr\n        });\n      });\n    };\n\n    _this.updateHandler = function (currentUser) {\n      _this.setState({\n        currentUser: currentUser\n      });\n\n      fetch(\"http://localhost:3000/api/v1/users/\".concat(currentUser.id), {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: _this.state.token\n        },\n        body: JSON.stringify({\n          username: currentUser.username,\n          password: currentUser.password\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (user) {\n        _this.setState({\n          currentUser: {\n            id: user.id,\n            username: user.username\n          }\n        });\n\n        _this.props.history.push(\"/home\");\n      });\n    };\n\n    _this.submitSignUpHandler = function (userInfo, event) {\n      event.preventDefault();\n\n      _this.createUser(userInfo);\n\n      _this.props.history.push(\"/home\");\n    };\n\n    _this.createUser = function (userInfo) {\n      fetch(\"http://localhost:3000/api/v1/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          username: userInfo.username,\n          password: userInfo.password\n        })\n      }).then(function (res) {\n        if (res.status === 406) throw new Error(res.status);else return res.json();\n      }).then(function (res) {\n        localStorage.setItem(\"token\", res.jwt);\n        localStorage.setItem(\"id\", res.user.id);\n        localStorage.setItem(\"username\", res.user.username);\n\n        _this.setState({\n          isUserLoggedIn: true,\n          token: localStorage.getItem(\"token\"),\n          currentUser: {\n            id: res.user.id,\n            username: res.user.username,\n            password: \"\"\n          }\n        });\n      }).catch(function (error) {\n        localStorage.setItem(\"signupError\", \"Duplicate account\");\n\n        _this.props.history.push(\"/signup\");\n      });\n    };\n\n    _this.submitLoginHandler = function (userInfo, event) {\n      event.preventDefault();\n\n      _this.getUser(userInfo);\n\n      _this.props.history.push(\"/home\");\n    };\n\n    _this.getUser = function (userInfo) {\n      fetch(\"http://localhost:3000/api/v1/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          username: userInfo.loginUsername,\n          password: userInfo.loginPassword\n        })\n      }).then(function (res) {\n        if (res.status === 401) throw new Error(res.status);else return res.json();\n      }) // .then(res => res.json())\n      .then(function (res) {\n        localStorage.setItem(\"token\", res.jwt);\n        localStorage.setItem(\"username\", res.user.username);\n        localStorage.setItem(\"id\", res.user.id);\n\n        _this.setState({\n          isUserLoggedIn: true,\n          token: localStorage.getItem(\"token\"),\n          currentUser: {\n            id: res.user.id,\n            username: res.user.username,\n            password: \"\"\n          }\n        });\n      }).catch(function (error) {\n        localStorage.setItem(\"loginError\", \"Invalid account/password\");\n\n        _this.props.history.push(\"/login\"); // this.setState({ alert_error: true });\n        // alert(`HTTP ERROR: ${error}, Unknown account or password!`);\n\n      });\n    };\n\n    _this.logout = function () {\n      //need to remove local storage token\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"id\");\n      localStorage.removeItem(\"username\");\n\n      _this.setState({\n        currentUser: {\n          id: 0,\n          username: \"\"\n        },\n        isUserLoggedIn: false,\n        token: \"\"\n      });\n\n      _this.props.history.push(\"/home\");\n    };\n\n    _this.deleteHandler = function (id) {\n      var posts = _toConsumableArray(_this.state.posts).filter(function (post) {\n        return post.id !== id;\n      });\n\n      _this.setState({\n        posts: posts\n      });\n    };\n\n    _this.editPostHandler = function (id, content) {\n      fetch(\"http://localhost:3000/api/v1/posts/\".concat(id), {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: _this.state.token\n        },\n        body: JSON.stringify({\n          content: content\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var newArr = _toConsumableArray(_this.state.posts);\n\n        newArr = newArr.map(function (post) {\n          if (post.id === id) {\n            return data;\n          } else {\n            return post;\n          }\n        });\n\n        _this.setState({\n          posts: newArr\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.getUsers();\n      fetch(\"http://localhost:3000/api/v1/posts\").then(function (resp) {\n        return resp.json();\n      }).then(function (posts) {\n        _this2.setState({\n          posts: posts\n        });\n      });\n      fetch(\"http://localhost:3000/api/v1/comments\").then(function (resp) {\n        return resp.json();\n      }).then(function (comments) {\n        _this2.setState({\n          comments: comments\n        });\n      });\n\n      if (localStorage.getItem(\"token\") !== null) {\n        this.setState({\n          currentUser: {\n            id: parseInt(localStorage.getItem(\"id\")),\n            username: localStorage.getItem(\"username\")\n          },\n          token: localStorage.getItem(\"token\"),\n          isUserLoggedIn: true\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      fetch(\"http://localhost:3000/api/v1/users\").then(function (resp) {\n        return resp.json();\n      }).then(function (users) {\n        localStorage.setItem(\"users\", JSON.stringify(users));\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      localStorage.clear();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        isUserLoggedIn: this.state.isUserLoggedIn,\n        logout: this.logout,\n        currentPath: this.props.location.pathname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/home\",\n        render: function render(RouterProps) {\n          return _this3.state.isUserLoggedIn ? React.createElement(UserShowPage, {\n            user_id: _this3.state.currentUser.id,\n            posts: _this3.state.posts,\n            addPost: _this3.addPost,\n            addComment: _this3.addComment,\n            isUserLoggedIn: _this3.state.isUserLoggedIn,\n            currentUser: _this3.state.currentUser,\n            deleteHandler: _this3.deleteHandler,\n            editPostHandler: _this3.editPostHandler,\n            comments: _this3.state.comments,\n            users: JSON.parse(localStorage.getItem(\"users\")),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }) : React.createElement(HomePage, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/user/:id\",\n        render: function render(RouterProps) {\n          return React.createElement(UserShowPage, {\n            user_id: RouterProps.match.params.id,\n            posts: _this3.state.posts,\n            addPost: _this3.addPost,\n            addComment: _this3.addComment,\n            isUserLoggedIn: _this3.state.isUserLoggedIn,\n            currentUser: _this3.state.currentUser,\n            deleteHandler: _this3.deleteHandler,\n            editPostHandler: _this3.editPostHandler,\n            comments: _this3.state.comments,\n            users: JSON.parse(localStorage.getItem(\"users\")),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/search\",\n        render: function render() {\n          return React.createElement(EditProfileForm, {\n            isUserLoggedIn: _this3.state.isUserLoggedIn,\n            currentUser: _this3.state.currentUser,\n            updateHandler: _this3.updateHandler,\n            mods: _this3.state.mods,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/editProfile\",\n        render: function render() {\n          return React.createElement(EditProfileForm, {\n            isUserLoggedIn: _this3.state.isUserLoggedIn,\n            currentUser: _this3.state.currentUser,\n            updateHandler: _this3.updateHandler,\n            mods: _this3.state.mods,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login\",\n        render: function render() {\n          return React.createElement(LoginForm, {\n            submitLoginHandler: _this3.submitLoginHandler,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/signUp\",\n        render: function render() {\n          return React.createElement(SignUpForm, {\n            submitSignUpHandler: _this3.submitSignUpHandler,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        component: HomePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getUsers: bindActionCreators(getUsers, dispatch)\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/flatironschool/flatiron/mod5/week2/playtime/src/App.js"],"names":["React","Component","NavBar","HomePage","Route","Switch","withRouter","UserShowPage","EditProfileForm","LoginForm","SignUpForm","bindActionCreators","getUsers","connect","App","state","isUserLoggedIn","currentUser","id","first_name","last_name","username","email","city","school","work","exp","users","posts","comments","token","addPost","input","playerId","friendId","fetch","method","headers","Accept","Authorization","localStorage","getItem","body","JSON","stringify","content","player_id","friend_id","then","res","json","data","newArr","push","setState","addComment","postId","comment","user_id","post_id","updateHandler","password","resp","user","props","history","submitSignUpHandler","userInfo","event","preventDefault","createUser","status","Error","setItem","jwt","catch","error","submitLoginHandler","getUser","loginUsername","loginPassword","logout","removeItem","deleteHandler","filter","post","editPostHandler","map","parseInt","prevProps","prevState","clear","location","pathname","RouterProps","parse","match","params","mods","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport HomePage from \"./components/HomePage\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport UserShowPage from \"./containers/PostsContainer\";\nimport EditProfileForm from \"./components/EditProfileForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport SignUpForm from \"./components/SignUpForm\";\nimport { bindActionCreators } from \"redux\";\nimport { getUsers } from \"./actions/userActions\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  state = {\n    isUserLoggedIn: false,\n    currentUser: {\n      id: 0,\n      first_name: \"\",\n      last_name: \"\",\n      username: \"\",\n      // password: \"\",\n      email: \"\",\n      city: \"\",\n      school: \"\",\n      work: \"\",\n      exp: 0\n    },\n    users: [],\n    posts: [],\n    comments: [],\n    token: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getUsers();\n\n    fetch(\"http://localhost:3000/api/v1/posts\")\n      .then(resp => resp.json())\n      .then(posts => {\n        this.setState({ posts });\n      });\n\n    fetch(\"http://localhost:3000/api/v1/comments\")\n      .then(resp => resp.json())\n      .then(comments => {\n        this.setState({ comments });\n      });\n\n    if (localStorage.getItem(\"token\") !== null) {\n      this.setState({\n        currentUser: {\n          id: parseInt(localStorage.getItem(\"id\")),\n          username: localStorage.getItem(\"username\")\n        },\n        token: localStorage.getItem(\"token\"),\n        isUserLoggedIn: true\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    fetch(\"http://localhost:3000/api/v1/users\")\n      .then(resp => resp.json())\n      .then(users => {\n        localStorage.setItem(\"users\", JSON.stringify(users));\n      });\n  }\n\n  componentWillUnmount() {\n    localStorage.clear();\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar\n          isUserLoggedIn={this.state.isUserLoggedIn}\n          logout={this.logout}\n          currentPath={this.props.location.pathname}\n        />\n\n        <Switch>\n          <Route\n            path=\"/home\"\n            render={RouterProps => {\n              return this.state.isUserLoggedIn ? (\n                <UserShowPage\n                  user_id={this.state.currentUser.id}\n                  posts={this.state.posts}\n                  addPost={this.addPost}\n                  addComment={this.addComment}\n                  isUserLoggedIn={this.state.isUserLoggedIn}\n                  currentUser={this.state.currentUser}\n                  deleteHandler={this.deleteHandler}\n                  editPostHandler={this.editPostHandler}\n                  comments={this.state.comments}\n                  users={JSON.parse(localStorage.getItem(\"users\"))}\n                />\n              ) : (\n                <HomePage />\n              );\n            }}\n          />\n          <Route\n            path=\"/user/:id\"\n            render={RouterProps => {\n              return (\n                <UserShowPage\n                  user_id={RouterProps.match.params.id}\n                  posts={this.state.posts}\n                  addPost={this.addPost}\n                  addComment={this.addComment}\n                  isUserLoggedIn={this.state.isUserLoggedIn}\n                  currentUser={this.state.currentUser}\n                  deleteHandler={this.deleteHandler}\n                  editPostHandler={this.editPostHandler}\n                  comments={this.state.comments}\n                  users={JSON.parse(localStorage.getItem(\"users\"))}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/search\"\n            render={() => {\n              return (\n                <EditProfileForm\n                  isUserLoggedIn={this.state.isUserLoggedIn}\n                  currentUser={this.state.currentUser}\n                  updateHandler={this.updateHandler}\n                  mods={this.state.mods}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/editProfile\"\n            render={() => {\n              return (\n                <EditProfileForm\n                  isUserLoggedIn={this.state.isUserLoggedIn}\n                  currentUser={this.state.currentUser}\n                  updateHandler={this.updateHandler}\n                  mods={this.state.mods}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/login\"\n            render={() => {\n              return <LoginForm submitLoginHandler={this.submitLoginHandler} />;\n            }}\n          />\n          <Route\n            path=\"/signUp\"\n            render={() => {\n              return (\n                <SignUpForm submitSignUpHandler={this.submitSignUpHandler} />\n              );\n            }}\n          />\n          <Route path=\"/\" component={HomePage} />\n        </Switch>\n      </div>\n    );\n  }\n\n  addPost = (input, playerId, friendId) => {\n    fetch(\"http://localhost:3000/api/v1/posts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        content: input,\n        player_id: playerId,\n        friend_id: friendId\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        let newArr = [...this.state.posts];\n        newArr.push(data);\n        this.setState({ posts: newArr });\n      });\n  };\n\n  addComment = (input, playerId, postId) => {\n    fetch(\"http://localhost:3000/api/v1/comments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        comment: input,\n        user_id: playerId,\n        post_id: postId\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        let newArr = [...this.state.comments, data];\n        this.setState({ comments: newArr });\n      });\n  };\n\n  updateHandler = currentUser => {\n    this.setState({ currentUser });\n\n    fetch(`http://localhost:3000/api/v1/users/${currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: this.state.token\n      },\n      body: JSON.stringify({\n        username: currentUser.username,\n        password: currentUser.password\n      })\n    })\n      .then(resp => resp.json())\n      .then(user => {\n        this.setState({\n          currentUser: {\n            id: user.id,\n            username: user.username\n          }\n        });\n        this.props.history.push(\"/home\");\n      });\n  };\n\n  submitSignUpHandler = (userInfo, event) => {\n    event.preventDefault();\n    this.createUser(userInfo);\n    this.props.history.push(\"/home\");\n  };\n\n  createUser = userInfo => {\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        username: userInfo.username,\n        password: userInfo.password\n      })\n    })\n      .then(res => {\n        if (res.status === 406) throw new Error(res.status);\n        else return res.json();\n      })\n      .then(res => {\n        localStorage.setItem(\"token\", res.jwt);\n        localStorage.setItem(\"id\", res.user.id);\n        localStorage.setItem(\"username\", res.user.username);\n        this.setState({\n          isUserLoggedIn: true,\n          token: localStorage.getItem(\"token\"),\n          currentUser: {\n            id: res.user.id,\n            username: res.user.username,\n            password: \"\"\n          }\n        });\n      })\n      .catch(error => {\n        localStorage.setItem(\"signupError\", \"Duplicate account\");\n        this.props.history.push(\"/signup\");\n      });\n  };\n\n  submitLoginHandler = (userInfo, event) => {\n    event.preventDefault();\n    this.getUser(userInfo);\n    this.props.history.push(\"/home\");\n  };\n\n  getUser = userInfo => {\n    fetch(\"http://localhost:3000/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        username: userInfo.loginUsername,\n        password: userInfo.loginPassword\n      })\n    })\n      .then(res => {\n        if (res.status === 401) throw new Error(res.status);\n        else return res.json();\n      })\n      // .then(res => res.json())\n      .then(res => {\n        localStorage.setItem(\"token\", res.jwt);\n        localStorage.setItem(\"username\", res.user.username);\n        localStorage.setItem(\"id\", res.user.id);\n        this.setState({\n          isUserLoggedIn: true,\n          token: localStorage.getItem(\"token\"),\n          currentUser: {\n            id: res.user.id,\n            username: res.user.username,\n            password: \"\"\n          }\n        });\n      })\n      .catch(error => {\n        localStorage.setItem(\"loginError\", \"Invalid account/password\");\n        this.props.history.push(\"/login\");\n        // this.setState({ alert_error: true });\n        // alert(`HTTP ERROR: ${error}, Unknown account or password!`);\n      });\n  };\n\n  logout = () => {\n    //need to remove local storage token\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"id\");\n    localStorage.removeItem(\"username\");\n\n    this.setState({\n      currentUser: {\n        id: 0,\n        username: \"\"\n      },\n      isUserLoggedIn: false,\n      token: \"\"\n    });\n\n    this.props.history.push(\"/home\");\n  };\n\n  deleteHandler = id => {\n    const posts = [...this.state.posts].filter(post => post.id !== id);\n    this.setState({ posts });\n  };\n\n  editPostHandler = (id, content) => {\n    fetch(`http://localhost:3000/api/v1/posts/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: this.state.token\n      },\n      body: JSON.stringify({\n        content\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        let newArr = [...this.state.posts];\n        newArr = newArr.map(post => {\n          if (post.id === id) {\n            return data;\n          } else {\n            return post;\n          }\n        });\n        this.setState({ posts: newArr });\n      });\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getUsers: bindActionCreators(getUsers, dispatch)\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n);\n"]},"metadata":{},"sourceType":"module"}